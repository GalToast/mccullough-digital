{"version":3,"file":"blocks/cta/editor.js","mappings":"mBAAA,MAAM,EAA+BA,OAAc,MCA7C,EAA+BA,OAAW,GAAU,OCApD,EAA+BA,OAAW,GAAQ,KCAlD,EAA+BA,OAAW,GAAW,QCArD,EAA+BA,OAAW,GAAQ,KCAlD,EAA+BA,OAAW,GAAe,Y,8lCCW/D,MAAMC,EAAyD,QAA1CC,EAAGC,GAAUC,YAAYC,UAAUC,eAAO,IAAAJ,EAAAA,EAAI,GAC7DK,EAA6D,QAA5CC,EAAGL,GAAUC,YAAYK,YAAYH,eAAO,IAAAE,EAAAA,GAC5DE,EAAAA,EAAAA,IAAG,aAAe,uBAIrBC,aACIC,cAAeC,EAAmB,CAC9B,eACA,iBACA,YACA,eACA,aACA,aACA,6BAEJC,SAAUC,EAAc,CACpB,CACI,eACA,CACIC,MAAO,EACPC,UAAW,gBACXC,aAAaR,EAAAA,EAAAA,IAAG,oBAAqB,sBACrCS,QAASlB,KAIrBmB,aAAcC,GAAkB,GAChC,CAAC,GACLlB,GAEJmB,EAAAA,EAAAA,mBAAkBnB,EAAAA,KAAe,IAC1BA,EACHoB,IAAAA,EAAK,WAAEnB,EAAU,SAAEoB,IACf,MAAM,SAAEnB,EAAQ,WAAEI,EAAU,WAAEgB,GAAerB,EACvCsB,GAAaC,EAAAA,EAAAA,eAAc,CAC7BV,UAAW,gBAGTW,GAAcC,EAAAA,EAAAA,SAAO,IACrB,YAAElB,EAAc,KAAOmB,EAAAA,EAAAA,WACxBC,IAAM,CACHpB,YAAaoB,EAAO,qBAAqBC,UAAUR,KAEvD,CAACA,KAEC,mBAAES,IAAuBC,EAAAA,EAAAA,aAAY,qBAgD3C,OA9CAC,EAAAA,EAAAA,WAAU,KACN,GAAIP,EAAYQ,QACZ,OAGJ,GAAIzB,EAAY0B,OAAS,EAErB,YADAT,EAAYQ,SAAU,GAI1B,MAAME,EAAkB,GAYxB,GAVIjC,GACAiC,EAAgBC,MACZC,EAAAA,EAAAA,aAAY,eAAgB,CACxBxB,MAAO,EACPC,UAAW,gBACXE,QAASd,KAKjBI,GAAcgB,EAAY,CAC1B,MAAMgB,GAAaD,EAAAA,EAAAA,aAAY,4BAA6B,CACxD/B,WAAYA,GAAcF,EAC1BkB,WAAYA,GAAc,KAG9Ba,EAAgBC,KAAKE,EACzB,CAE+B,IAA3BH,EAAgBD,SAIpBJ,EAAmBT,EAAUc,GAAiB,GAC9CV,EAAYQ,SAAU,IACvB,CACCX,EACAhB,EACAe,EACAnB,EACAM,EAAY0B,OACZJ,KAIAS,EAAAA,EAAAA,eAAAC,EAAAA,SAAA,MACID,EAAAA,EAAAA,eAAA,cAAahB,IACTgB,EAAAA,EAAAA,eAAA,OAAKzB,UAAU,cACXyB,EAAAA,EAAAA,eAACE,EAAAA,YAAW,CACRhC,cAAgBC,EAChBC,SAAWC,EACXK,aAAeC,MAMvC,EACAwB,KAAIA,KACOH,EAAAA,EAAAA,eAACE,EAAAA,YAAYE,QAAO,O","sources":["webpack://mccullough-digital-theme/external window \"React\"","webpack://mccullough-digital-theme/external window [\"wp\",\"blocks\"]","webpack://mccullough-digital-theme/external window [\"wp\",\"i18n\"]","webpack://mccullough-digital-theme/external window [\"wp\",\"element\"]","webpack://mccullough-digital-theme/external window [\"wp\",\"data\"]","webpack://mccullough-digital-theme/external window [\"wp\",\"blockEditor\"]","webpack://mccullough-digital-theme/./blocks/cta/editor.js"],"sourcesContent":["const __WEBPACK_NAMESPACE_OBJECT__ = window[\"React\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blocks\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"i18n\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"element\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"data\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blockEditor\"];","import { registerBlockType, createBlock } from '@wordpress/blocks';\nimport { __ } from '@wordpress/i18n';\nimport { useEffect, useRef } from '@wordpress/element';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport {\n    useBlockProps,\n    InnerBlocks,\n} from '@wordpress/block-editor';\n\nimport metadata from './block.json';\n\nconst defaultHeadline = metadata?.attributes?.headline?.default ?? '';\nconst defaultButtonText = metadata?.attributes?.buttonText?.default\n    ?? __('Let\\'s Talk', 'mccullough-digital');\nconst defaultButtonLink = metadata?.attributes?.buttonLink?.default ?? '';\n\nconst {\n    innerBlocks: {\n        allowedBlocks: allowedCtaBlocks = [\n            'core/heading',\n            'core/paragraph',\n            'core/list',\n            'core/buttons',\n            'core/group',\n            'core/image',\n            'mccullough-digital/button',\n        ],\n        template: ctaTemplate = [\n            [\n                'core/heading',\n                {\n                    level: 2,\n                    className: 'section-title',\n                    placeholder: __('Add CTA headlineâ€¦', 'mccullough-digital'),\n                    content: defaultHeadline,\n                },\n            ],\n        ],\n        templateLock: ctaTemplateLock = false,\n    } = {},\n} = metadata;\n\nregisterBlockType(metadata.name, {\n    ...metadata,\n    edit({ attributes, clientId }) {\n        const { headline, buttonText, buttonLink } = attributes;\n        const blockProps = useBlockProps({\n            className: 'cta-section',\n        });\n\n        const hasMigrated = useRef(false);\n        const { innerBlocks = [] } = useSelect(\n            (select) => ({\n                innerBlocks: select('core/block-editor').getBlocks(clientId),\n            }),\n            [clientId]\n        );\n        const { replaceInnerBlocks } = useDispatch('core/block-editor');\n\n        useEffect(() => {\n            if (hasMigrated.current) {\n                return;\n            }\n\n            if (innerBlocks.length > 0) {\n                hasMigrated.current = true;\n                return;\n            }\n\n            const generatedBlocks = [];\n\n            if (headline) {\n                generatedBlocks.push(\n                    createBlock('core/heading', {\n                        level: 2,\n                        className: 'section-title',\n                        content: headline,\n                    })\n                );\n            }\n\n            if (buttonText || buttonLink) {\n                const neonButton = createBlock('mccullough-digital/button', {\n                    buttonText: buttonText || defaultButtonText,\n                    buttonLink: buttonLink || '',\n                });\n\n                generatedBlocks.push(neonButton);\n            }\n\n            if (generatedBlocks.length === 0) {\n                return;\n            }\n\n            replaceInnerBlocks(clientId, generatedBlocks, false);\n            hasMigrated.current = true;\n        }, [\n            buttonLink,\n            buttonText,\n            clientId,\n            headline,\n            innerBlocks.length,\n            replaceInnerBlocks,\n        ]);\n\n        return (\n            <>\n                <section {...blockProps}>\n                    <div className=\"container\">\n                        <InnerBlocks\n                            allowedBlocks={ allowedCtaBlocks }\n                            template={ ctaTemplate }\n                            templateLock={ ctaTemplateLock }\n                        />\n                    </div>\n                </section>\n            </>\n        );\n    },\n    save() {\n        return <InnerBlocks.Content />;\n    },\n});\n"],"names":["window","defaultHeadline","_metadata$attributes$","metadata","attributes","headline","default","defaultButtonText","_metadata$attributes$2","buttonText","__","innerBlocks","allowedBlocks","allowedCtaBlocks","template","ctaTemplate","level","className","placeholder","content","templateLock","ctaTemplateLock","registerBlockType","edit","clientId","buttonLink","blockProps","useBlockProps","hasMigrated","useRef","useSelect","select","getBlocks","replaceInnerBlocks","useDispatch","useEffect","current","length","generatedBlocks","push","createBlock","neonButton","createElement","Fragment","InnerBlocks","save","Content"],"sourceRoot":""}