{"version":3,"file":"blocks/service-card/editor.js","mappings":"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","sources":["webpack://mccullough-digital-theme/external window \"React\"","webpack://mccullough-digital-theme/external window [\"wp\",\"blocks\"]","webpack://mccullough-digital-theme/external window [\"wp\",\"i18n\"]","webpack://mccullough-digital-theme/external window [\"wp\",\"element\"]","webpack://mccullough-digital-theme/external window [\"wp\",\"data\"]","webpack://mccullough-digital-theme/external window [\"wp\",\"blockEditor\"]","webpack://mccullough-digital-theme/./blocks/service-card/editor.js"],"sourcesContent":["const __WEBPACK_NAMESPACE_OBJECT__ = window[\"React\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blocks\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"i18n\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"element\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"data\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blockEditor\"];","import { registerBlockType, createBlock } from '@wordpress/blocks';\nimport { __ } from '@wordpress/i18n';\nimport { useEffect, useRef } from '@wordpress/element';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport {\n    useBlockProps,\n    InnerBlocks,\n} from '@wordpress/block-editor';\n\nimport metadata from './block.json';\n\nconst {\n    innerBlocks: {\n        allowedBlocks: allowedCardBlocks = [\n            'core/group',\n            'core/heading',\n            'core/paragraph',\n            'core/list',\n            'core/html',\n            'core/buttons',\n            'core/button',\n            'core/image',\n        ],\n        template: cardTemplate = [\n            [\n                'core/group',\n                {\n                    className: 'service-card__body',\n                },\n                [\n                    [\n                        'core/group',\n                        {\n                            className: 'icon',\n                        },\n                    ],\n                    [\n                        'core/heading',\n                        {\n                            level: 3,\n                            placeholder: __('Add service title…', 'mccullough-digital'),\n                            content: metadata?.attributes?.title?.default ?? __('Service title', 'mccullough-digital'),\n                        },\n                    ],\n                    [\n                        'core/paragraph',\n                        {\n                            placeholder: __('Describe the value of this service…', 'mccullough-digital'),\n                            content: metadata?.attributes?.text?.default ?? '',\n                        },\n                    ],\n                ],\n            ],\n            [\n                'core/buttons',\n                {\n                    className: 'service-card__cta',\n                    layout: {\n                        type: 'flex',\n                        justifyContent: 'center',\n                    },\n                },\n                [\n                    [\n                        'core/button',\n                        {\n                            className: 'learn-more',\n                            text: metadata?.attributes?.linkText?.default ?? __('Learn More →', 'mccullough-digital'),\n                        },\n                    ],\n                ],\n            ],\n        ],\n        templateLock: cardTemplateLock = false,\n    } = {},\n} = metadata;\n\nregisterBlockType(metadata.name, {\n    ...metadata,\n    edit({ attributes, clientId }) {\n        const { icon, title, text, linkText, linkUrl } = attributes;\n        const blockProps = useBlockProps({\n            className: 'service-card',\n        });\n\n        const hasMigrated = useRef(false);\n        const { innerBlocks = [] } = useSelect(\n            (select) => ({\n                innerBlocks: select('core/block-editor').getBlocks(clientId),\n            }),\n            [clientId]\n        );\n        const { replaceInnerBlocks } = useDispatch('core/block-editor');\n\n        useEffect(() => {\n            if (hasMigrated.current) {\n                return;\n            }\n\n            if (innerBlocks.length > 0) {\n                hasMigrated.current = true;\n                return;\n            }\n\n            const bodyChildren = [];\n\n            const iconGroupChildren = [];\n\n            if (icon) {\n                iconGroupChildren.push(\n                    createBlock('core/html', {\n                        content: icon,\n                    })\n                );\n            }\n\n            const iconGroup = createBlock(\n                'core/group',\n                {\n                    className: 'icon',\n                },\n                iconGroupChildren\n            );\n\n            bodyChildren.push(iconGroup);\n\n            if (title) {\n                bodyChildren.push(\n                    createBlock('core/heading', {\n                        level: 3,\n                        content: title,\n                    })\n                );\n            }\n\n            if (text) {\n                bodyChildren.push(\n                    createBlock('core/paragraph', {\n                        content: text,\n                    })\n                );\n            }\n\n            const bodyGroup = createBlock(\n                'core/group',\n                {\n                    className: 'service-card__body',\n                },\n                bodyChildren\n            );\n\n            const newBlocks = [bodyGroup];\n\n            if (linkText || linkUrl) {\n                const button = createBlock('core/button', {\n                    className: 'learn-more',\n                    text: linkText || (metadata?.attributes?.linkText?.default ?? ''),\n                    url: linkUrl || undefined,\n                });\n\n                const buttons = createBlock(\n                    'core/buttons',\n                    {\n                        className: 'service-card__cta',\n                        layout: {\n                            type: 'flex',\n                            justifyContent: 'center',\n                        },\n                    },\n                    [button]\n                );\n\n                newBlocks.push(buttons);\n            }\n\n            if (newBlocks.length === 0) {\n                return;\n            }\n\n            replaceInnerBlocks(clientId, newBlocks, false);\n            hasMigrated.current = true;\n        }, [\n            clientId,\n            icon,\n            innerBlocks.length,\n            linkText,\n            linkUrl,\n            replaceInnerBlocks,\n            text,\n            title,\n        ]);\n\n        return (\n            <>\n                <article {...blockProps}>\n                    <div className=\"service-card-content\">\n                        <InnerBlocks\n                            allowedBlocks={ allowedCardBlocks }\n                            template={ cardTemplate }\n                            templateLock={ cardTemplateLock }\n                        />\n                    </div>\n                </article>\n            </>\n        );\n    },\n    save() {\n        return <InnerBlocks.Content />;\n    },\n});\n"],"names":["window","innerBlocks","allowedBlocks","allowedCardBlocks","template","cardTemplate","className","level","placeholder","__","content","_metadata$attributes$","metadata","attributes","title","default","_metadata$attributes$2","text","layout","type","justifyContent","_metadata$attributes$3","linkText","templateLock","cardTemplateLock","registerBlockType","edit","clientId","icon","linkUrl","blockProps","useBlockProps","hasMigrated","useRef","useSelect","select","getBlocks","replaceInnerBlocks","useDispatch","useEffect","current","length","bodyChildren","iconGroupChildren","push","createBlock","iconGroup","newBlocks","_metadata$attributes$4","button","url","undefined","buttons","createElement","Fragment","InnerBlocks","save","Content"],"sourceRoot":""}