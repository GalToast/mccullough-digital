{"version":3,"file":"blocks/button/editor.js","mappings":"mBAAA,MAAM,EAA+BA,OAAc,MCA7C,EAA+BA,OAAW,GAAU,OCApD,EAA+BA,OAAW,GAAQ,KCAlD,EAA+BA,OAAW,GAAe,YCAzD,EAA+BA,OAAW,GAAc,W,krBCa9DC,EAAAA,EAAAA,mBAAkBC,EAAAA,KAAe,IAC1BA,EACHC,IAAAA,EAAK,WAAEC,EAAU,cAAEC,IACf,MAAM,WAAEC,EAAU,WAAEC,EAAU,cAAEC,GAAkBJ,EAC5CK,GAAaC,EAAAA,EAAAA,eAAc,CAC7BC,UAAW,qBAITC,EAAoB,CACtBD,UAFoB,+BAKpBJ,IACAK,EAAkBC,KAAON,EACrBC,IACAI,EAAkBE,OAAS,SAC3BF,EAAkBG,IAAM,aAIhC,MAAMC,EAAYT,EAAa,IAAM,SAErC,OACIU,EAAAA,EAAAA,eAAAC,EAAAA,SAAA,MACID,EAAAA,EAAAA,eAACE,EAAAA,cAAa,MACVF,EAAAA,EAAAA,eAACG,EAAAA,eAAc,CACXC,IAAMd,EACNe,SAAYD,GAAQhB,EAAc,CAAEE,WAAYc,QAAAA,EAAO,SAG/DJ,EAAAA,EAAAA,eAACM,EAAAA,kBAAiB,MACdN,EAAAA,EAAAA,eAACO,EAAAA,UAAS,CAACC,OAAQC,EAAAA,EAAAA,IAAG,kBAAmB,wBACrCT,EAAAA,EAAAA,eAACU,EAAAA,cAAa,CACVC,OAAQF,EAAAA,EAAAA,IAAG,kBAAmB,sBAC9BG,QAAUrB,EACVc,SAAYQ,GAAUzB,EAAc,CAAEG,cAAesB,IACrDC,MAAOL,EAAAA,EAAAA,IAAG,6DAA8D,sBACxEM,UAAazB,OAIzBU,EAAAA,EAAAA,eAAA,UAAUR,IACNQ,EAAAA,EAAAA,eAACD,EAAS,IAAMJ,EAAoBqB,KAAO1B,OAAa2B,EAAY,WAChEjB,EAAAA,EAAAA,eAACkB,EAAAA,SAAQ,CACLC,QAAQ,OACRzB,UAAU,yBACVmB,MAAQxB,EACRgB,SAAYQ,GAAUzB,EAAc,CAAEC,WAAYwB,IAClDO,eAAiB,GACjBC,aAAcZ,EAAAA,EAAAA,IAAG,mBAAoB,0BAGzCnB,IACAU,EAAAA,EAAAA,eAACsB,EAAAA,OAAM,CACHC,OAAO,OACPC,eAAgB,EAChB9B,UAAU,kCAERe,EAAAA,EAAAA,IAAG,4EAA6E,wBAM1G,EACAgB,KAAIA,IACO,M","sources":["webpack://mccullough-digital-theme/external window \"React\"","webpack://mccullough-digital-theme/external window [\"wp\",\"blocks\"]","webpack://mccullough-digital-theme/external window [\"wp\",\"i18n\"]","webpack://mccullough-digital-theme/external window [\"wp\",\"blockEditor\"]","webpack://mccullough-digital-theme/external window [\"wp\",\"components\"]","webpack://mccullough-digital-theme/./blocks/button/editor.js"],"sourcesContent":["const __WEBPACK_NAMESPACE_OBJECT__ = window[\"React\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blocks\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"i18n\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blockEditor\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"components\"];","import { registerBlockType } from '@wordpress/blocks';\nimport { __ } from '@wordpress/i18n';\nimport {\n    useBlockProps,\n    RichText,\n    BlockControls,\n    URLInputButton,\n    InspectorControls,\n} from '@wordpress/block-editor';\nimport { PanelBody, ToggleControl, Notice } from '@wordpress/components';\n\nimport metadata from './block.json';\n\nregisterBlockType(metadata.name, {\n    ...metadata,\n    edit({ attributes, setAttributes }) {\n        const { buttonText, buttonLink, opensInNewTab } = attributes;\n        const blockProps = useBlockProps({\n            className: 'mcd-button-block',\n        });\n\n        const buttonBaseClass = 'cta-button hero__cta-button';\n        const commonButtonProps = {\n            className: buttonBaseClass,\n        };\n\n        if (buttonLink) {\n            commonButtonProps.href = buttonLink;\n            if (opensInNewTab) {\n                commonButtonProps.target = '_blank';\n                commonButtonProps.rel = 'noopener';\n            }\n        }\n\n        const ButtonTag = buttonLink ? 'a' : 'button';\n\n        return (\n            <>\n                <BlockControls>\n                    <URLInputButton\n                        url={ buttonLink }\n                        onChange={ (url) => setAttributes({ buttonLink: url ?? '' }) }\n                    />\n                </BlockControls>\n                <InspectorControls>\n                    <PanelBody title={ __('Button Settings', 'mccullough-digital') }>\n                        <ToggleControl\n                            label={ __('Open in new tab', 'mccullough-digital') }\n                            checked={ opensInNewTab }\n                            onChange={ (value) => setAttributes({ opensInNewTab: value }) }\n                            help={ __('Adds target=\"_blank\" and rel=\"noopener\" when a URL is set.', 'mccullough-digital') }\n                            disabled={ ! buttonLink }\n                        />\n                    </PanelBody>\n                </InspectorControls>\n                <div { ...blockProps }>\n                    <ButtonTag { ...commonButtonProps } type={ buttonLink ? undefined : 'button' }>\n                        <RichText\n                            tagName=\"span\"\n                            className=\"hero__cta-button-label\"\n                            value={ buttonText }\n                            onChange={ (value) => setAttributes({ buttonText: value }) }\n                            allowedFormats={ [] }\n                            placeholder={ __('Add button textâ€¦', 'mccullough-digital') }\n                        />\n                    </ButtonTag>\n                    { ! buttonLink && (\n                        <Notice\n                            status=\"info\"\n                            isDismissible={ false }\n                            className=\"mcd-button-block__link-notice\"\n                        >\n                            { __('Add a link from the toolbar to output an anchor element on the front end.', 'mccullough-digital') }\n                        </Notice>\n                    ) }\n                </div>\n            </>\n        );\n    },\n    save() {\n        return null;\n    },\n});\n"],"names":["window","registerBlockType","metadata","edit","attributes","setAttributes","buttonText","buttonLink","opensInNewTab","blockProps","useBlockProps","className","commonButtonProps","href","target","rel","ButtonTag","createElement","Fragment","BlockControls","URLInputButton","url","onChange","InspectorControls","PanelBody","title","__","ToggleControl","label","checked","value","help","disabled","type","undefined","RichText","tagName","allowedFormats","placeholder","Notice","status","isDismissible","save"],"sourceRoot":""}