{"version":3,"file":"blocks/hero/editor.js","mappings":"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","sources":["webpack://mccullough-digital-theme/external window \"React\"","webpack://mccullough-digital-theme/external window [\"wp\",\"blocks\"]","webpack://mccullough-digital-theme/external window [\"wp\",\"i18n\"]","webpack://mccullough-digital-theme/external window [\"wp\",\"element\"]","webpack://mccullough-digital-theme/external window [\"wp\",\"data\"]","webpack://mccullough-digital-theme/external window [\"wp\",\"blockEditor\"]","webpack://mccullough-digital-theme/external window [\"wp\",\"components\"]","webpack://mccullough-digital-theme/./blocks/hero/editor.js"],"sourcesContent":["const __WEBPACK_NAMESPACE_OBJECT__ = window[\"React\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blocks\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"i18n\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"element\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"data\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blockEditor\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"components\"];","import { registerBlockType, createBlock } from '@wordpress/blocks';\nimport { __ } from '@wordpress/i18n';\nimport { useEffect, useRef } from '@wordpress/element';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport {\n    useBlockProps,\n    InnerBlocks,\n    InspectorControls,\n    MediaUpload,\n    MediaUploadCheck,\n} from '@wordpress/block-editor';\nimport {\n    PanelBody,\n    Button,\n    SelectControl,\n    RangeControl,\n    ToggleControl,\n} from '@wordpress/components';\n\nimport metadata from './block.json';\n\nconst defaultHeadline = metadata?.attributes?.headline?.default ?? '';\nconst defaultSubheading = metadata?.attributes?.subheading?.default ?? '';\nconst defaultButtonText = metadata?.attributes?.buttonText?.default\n    ?? __('Start a Project', 'mccullough-digital');\nconst defaultButtonLink = metadata?.attributes?.buttonLink?.default ?? '';\n\nconst {\n    innerBlocks: {\n        allowedBlocks: allowedHeroBlocks = [\n            'core/heading',\n            'core/paragraph',\n            'core/list',\n            'core/buttons',\n            'core/group',\n            'core/image',\n            'core/media-text',\n        ],\n        template: heroTemplate = [\n            [\n                'core/heading',\n                {\n                    level: 1,\n                    className: 'hero__headline',\n                    placeholder: __('Add hero headline…', 'mccullough-digital'),\n                    content: defaultHeadline,\n                },\n            ],\n            [\n                'core/paragraph',\n                {\n                    placeholder: __('Add supporting copy…', 'mccullough-digital'),\n                    content: defaultSubheading,\n                },\n            ],\n            [\n                'core/buttons',\n                {\n                    layout: {\n                        type: 'flex',\n                        justifyContent: 'center',\n                    },\n                },\n                [\n                    [\n                        'core/button',\n                        {\n                            className: 'cta-button',\n                            text: defaultButtonText,\n                            url: defaultButtonLink,\n                        },\n                    ],\n                ],\n            ],\n        ],\n        templateLock: heroTemplateLock = false,\n    } = {},\n} = metadata;\n\nconst DEFAULT_BUTTON_TEXT = defaultButtonText;\n\nregisterBlockType(metadata.name, {\n    ...metadata,\n    edit({ attributes, setAttributes, clientId }) {\n        const { \n            headline, \n            subheading, \n            buttonText, \n            buttonLink,\n            heroImageId,\n            heroImageUrl,\n            heroImageAlt,\n            imagePosition,\n            imageSize,\n            imageOpacity,\n            imageVerticalOffset,\n            imageHorizontalOffset,\n            heroImageWidth,\n            hideImageOnMobile,\n        } = attributes;\n        \n        const blockProps = useBlockProps({\n            className: 'hero',\n        });\n\n        const hasMigrated = useRef(false);\n        const { innerBlocks = [] } = useSelect(\n            (select) => ({\n                innerBlocks: select('core/block-editor').getBlocks(clientId),\n            }),\n            [clientId]\n        );\n        const { replaceInnerBlocks } = useDispatch('core/block-editor');\n\n        const extractNaturalWidth = (media) => {\n            if (!media) {\n                return 0;\n            }\n\n            const {\n                width,\n                media_details: mediaDetails = {},\n                sizes = {},\n            } = media;\n\n            const detailsWidth = mediaDetails?.width;\n            const fullSizeWidth = sizes?.full?.width;\n\n            return (\n                detailsWidth\n                || fullSizeWidth\n                || width\n                || 0\n            );\n        };\n\n        const heroMedia = useSelect(\n            (select) =>\n                heroImageId ? select('core').getMedia(heroImageId) : null,\n            [heroImageId]\n        );\n\n        useEffect(() => {\n            if (!heroImageId || !heroMedia) {\n                return;\n            }\n\n            const naturalWidth = extractNaturalWidth(heroMedia);\n\n            if (naturalWidth && naturalWidth !== heroImageWidth) {\n                setAttributes({ heroImageWidth: naturalWidth });\n            }\n        }, [heroImageId, heroImageWidth, heroMedia, setAttributes]);\n\n        useEffect(() => {\n            if (hasMigrated.current) {\n                return;\n            }\n\n            if (innerBlocks.length > 0) {\n                hasMigrated.current = true;\n                return;\n            }\n\n            const generatedBlocks = [];\n\n            if (headline) {\n                generatedBlocks.push(\n                    createBlock('core/heading', {\n                        level: 1,\n                        className: 'hero__headline',\n                        content: headline,\n                    })\n                );\n            }\n\n            if (subheading) {\n                generatedBlocks.push(\n                    createBlock('core/paragraph', {\n                        content: subheading,\n                    })\n                );\n            }\n\n            if (buttonText || buttonLink) {\n                const button = createBlock('core/button', {\n                    className: 'cta-button',\n                    text: buttonText || DEFAULT_BUTTON_TEXT,\n                    url: buttonLink || undefined,\n                });\n\n                const buttonsWrapper = createBlock(\n                    'core/buttons',\n                    {\n                        layout: {\n                            type: 'flex',\n                            justifyContent: 'center',\n                        },\n                    },\n                    [button]\n                );\n\n                generatedBlocks.push(buttonsWrapper);\n            }\n\n            if (generatedBlocks.length === 0) {\n                return;\n            }\n\n            replaceInnerBlocks(clientId, generatedBlocks, false);\n            hasMigrated.current = true;\n        }, [\n            buttonLink,\n            buttonText,\n            clientId,\n            headline,\n            innerBlocks.length,\n            replaceInnerBlocks,\n            subheading,\n        ]);\n\n        const onSelectImage = (media) => {\n            setAttributes({\n                heroImageId: media.id,\n                heroImageUrl: media.url,\n                heroImageAlt: media.alt || '',\n                heroImageWidth: extractNaturalWidth(media),\n            });\n        };\n\n        const onRemoveImage = () => {\n            setAttributes({\n                heroImageId: 0,\n                heroImageUrl: '',\n                heroImageAlt: '',\n                heroImageWidth: 0,\n            });\n        };\n\n        const buildImagePresentation = () => {\n            const baseTransforms = {\n                'bottom-center': 'translateX(-50%)',\n                'center-right': 'translateY(-50%)',\n                'center-left': 'translateY(-50%)',\n                center: 'translate(-50%, -50%)',\n            };\n\n            const classes = ['hero__image-container'];\n\n            if (imagePosition) {\n                classes.push(`hero__image-position--${imagePosition}`);\n            }\n\n            if (hideImageOnMobile) {\n                classes.push('hero__image-hide-mobile');\n            }\n\n            const styles = {\n                opacity: imageOpacity / 100,\n            };\n\n            if (heroImageWidth > 0) {\n                styles.width = `calc(${imageSize} / 100 * ${heroImageWidth}px)`;\n            } else {\n                styles.width = `${imageSize}vw`;\n            }\n\n            const transformParts = [];\n\n            if (baseTransforms[imagePosition]) {\n                transformParts.push(baseTransforms[imagePosition]);\n            }\n\n            if (imageVerticalOffset !== 0) {\n                transformParts.push(`translateY(${imageVerticalOffset}px)`);\n            }\n\n            if (imageHorizontalOffset !== 0) {\n                transformParts.push(`translateX(${imageHorizontalOffset}px)`);\n            }\n\n            if (transformParts.length > 0) {\n                styles.transform = transformParts.join(' ');\n            }\n\n            return {\n                className: classes.join(' '),\n                styles,\n            };\n        };\n\n        const { className: imageContainerClassName, styles: imageStyles } =\n            buildImagePresentation();\n\n        return (\n            <>\n                <InspectorControls>\n                    <PanelBody \n                        title={__('Hero Image', 'mccullough-digital')} \n                        initialOpen={true}\n                    >\n                        <MediaUploadCheck>\n                            <MediaUpload\n                                onSelect={onSelectImage}\n                                allowedTypes={['image']}\n                                value={heroImageId}\n                                render={({ open }) => (\n                                    <div style={{ marginBottom: '16px' }}>\n                                        {!heroImageUrl ? (\n                                            <Button\n                                                onClick={open}\n                                                variant=\"secondary\"\n                                                style={{ width: '100%' }}\n                                            >\n                                                {__('Select Hero Image', 'mccullough-digital')}\n                                            </Button>\n                                        ) : (\n                                            <>\n                                                <img\n                                                    src={heroImageUrl}\n                                                    alt={heroImageAlt}\n                                                    style={{\n                                                        width: '100%',\n                                                        height: 'auto',\n                                                        marginBottom: '8px',\n                                                        borderRadius: '4px',\n                                                    }}\n                                                />\n                                                <div style={{ display: 'flex', gap: '8px' }}>\n                                                    <Button\n                                                        onClick={open}\n                                                        variant=\"secondary\"\n                                                        style={{ flex: 1 }}\n                                                    >\n                                                        {__('Replace Image', 'mccullough-digital')}\n                                                    </Button>\n                                                    <Button\n                                                        onClick={onRemoveImage}\n                                                        variant=\"secondary\"\n                                                        isDestructive\n                                                    >\n                                                        {__('Remove', 'mccullough-digital')}\n                                                    </Button>\n                                                </div>\n                                            </>\n                                        )}\n                                    </div>\n                                )}\n                            />\n                        </MediaUploadCheck>\n\n                        {heroImageUrl && (\n                            <>\n                                <SelectControl\n                                    label={__('Image Position', 'mccullough-digital')}\n                                    value={imagePosition}\n                                    options={[\n                                        { label: __('Bottom Right', 'mccullough-digital'), value: 'bottom-right' },\n                                        { label: __('Bottom Left', 'mccullough-digital'), value: 'bottom-left' },\n                                        { label: __('Bottom Center', 'mccullough-digital'), value: 'bottom-center' },\n                                        { label: __('Center Right', 'mccullough-digital'), value: 'center-right' },\n                                        { label: __('Center Left', 'mccullough-digital'), value: 'center-left' },\n                                        { label: __('Center', 'mccullough-digital'), value: 'center' },\n                                    ]}\n                                    onChange={(value) => setAttributes({ imagePosition: value })}\n                                />\n\n                                <RangeControl\n                                    label={__('Image Size (%)', 'mccullough-digital')}\n                                    value={imageSize}\n                                    onChange={(value) => setAttributes({ imageSize: value })}\n                                    min={10}\n                                    max={200}\n                                    step={5}\n                                />\n\n                                <RangeControl\n                                    label={__('Opacity (%)', 'mccullough-digital')}\n                                    value={imageOpacity}\n                                    onChange={(value) => setAttributes({ imageOpacity: value })}\n                                    min={0}\n                                    max={100}\n                                    step={5}\n                                />\n\n                                <RangeControl\n                                    label={__('Vertical Offset (px)', 'mccullough-digital')}\n                                    value={imageVerticalOffset}\n                                    onChange={(value) => setAttributes({ imageVerticalOffset: value })}\n                                    min={-200}\n                                    max={200}\n                                    step={10}\n                                    help={__('Positive moves down, negative moves up', 'mccullough-digital')}\n                                />\n\n                                <RangeControl\n                                    label={__('Horizontal Offset (px)', 'mccullough-digital')}\n                                    value={imageHorizontalOffset}\n                                    onChange={(value) => setAttributes({ imageHorizontalOffset: value })}\n                                    min={-200}\n                                    max={200}\n                                    step={10}\n                                    help={__('Positive moves right, negative moves left', 'mccullough-digital')}\n                                />\n\n                                <ToggleControl\n                                    label={__('Hide on Mobile', 'mccullough-digital')}\n                                    checked={hideImageOnMobile}\n                                    onChange={(value) => setAttributes({ hideImageOnMobile: value })}\n                                    help={__('Hide the image on screens smaller than 768px', 'mccullough-digital')}\n                                />\n                            </>\n                        )}\n                    </PanelBody>\n                </InspectorControls>\n\n                <section {...blockProps}>\n                    <div\n                        className=\"hero-canvas-placeholder\"\n                        aria-hidden=\"true\"\n                        role=\"presentation\"\n                    />\n                    {heroImageUrl && (\n                        <div className={imageContainerClassName} style={imageStyles}>\n                            <img\n                                src={heroImageUrl}\n                                alt={heroImageAlt}\n                                className=\"hero__decorative-image\"\n                            />\n                        </div>\n                    )}\n                    <div className=\"hero-content\">\n                        <InnerBlocks\n                            allowedBlocks={ allowedHeroBlocks }\n                            template={ heroTemplate }\n                            templateLock={ heroTemplateLock }\n                        />\n                    </div>\n                </section>\n            </>\n        );\n    },\n    save() {\n        return <InnerBlocks.Content />;\n    },\n});\n"],"names":["window","defaultHeadline","_metadata$attributes$","metadata","attributes","headline","default","defaultSubheading","_metadata$attributes$2","subheading","defaultButtonText","_metadata$attributes$3","buttonText","__","defaultButtonLink","_metadata$attributes$4","buttonLink","innerBlocks","allowedBlocks","allowedHeroBlocks","template","heroTemplate","level","className","placeholder","content","layout","type","justifyContent","text","url","templateLock","heroTemplateLock","DEFAULT_BUTTON_TEXT","registerBlockType","edit","setAttributes","clientId","heroImageId","heroImageUrl","heroImageAlt","imagePosition","imageSize","imageOpacity","imageVerticalOffset","imageHorizontalOffset","heroImageWidth","hideImageOnMobile","blockProps","useBlockProps","hasMigrated","useRef","useSelect","select","getBlocks","replaceInnerBlocks","useDispatch","extractNaturalWidth","media","width","media_details","mediaDetails","sizes","detailsWidth","fullSizeWidth","full","heroMedia","getMedia","useEffect","naturalWidth","current","length","generatedBlocks","push","createBlock","button","undefined","buttonsWrapper","onRemoveImage","imageContainerClassName","styles","imageStyles","buildImagePresentation","baseTransforms","center","classes","opacity","transformParts","transform","join","createElement","Fragment","InspectorControls","PanelBody","title","initialOpen","MediaUploadCheck","MediaUpload","onSelect","id","alt","allowedTypes","value","render","open","style","marginBottom","src","height","borderRadius","display","gap","Button","onClick","variant","flex","isDestructive","SelectControl","label","options","onChange","RangeControl","min","max","step","help","ToggleControl","checked","role","InnerBlocks","save","Content"],"sourceRoot":""}