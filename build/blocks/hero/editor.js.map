{"version":3,"file":"blocks/hero/editor.js","mappings":"mBAAA,MAAM,EAA+BA,OAAc,MCA7C,EAA+BA,OAAW,GAAU,OCApD,EAA+BA,OAAW,GAAQ,KCAlD,EAA+BA,OAAW,GAAW,QCArD,EAA+BA,OAAW,GAAQ,KCAlD,EAA+BA,OAAW,GAAe,YCAzD,EAA+BA,OAAW,GAAc,W,62ECqB9D,MAAMC,EAAyD,QAA1CC,EAAGC,GAAUC,YAAYC,UAAUC,eAAO,IAAAJ,EAAAA,EAAI,GAC7DK,EAA6D,QAA5CC,EAAGL,GAAUC,YAAYK,YAAYH,eAAO,IAAAE,EAAAA,EAAI,GACjEE,EAA6D,QAA5CC,EAAGR,GAAUC,YAAYQ,YAAYN,eAAO,IAAAK,EAAAA,GAC5DE,EAAAA,EAAAA,IAAG,kBAAmB,sBACvBC,EAA6D,QAA5CC,EAAGZ,GAAUC,YAAYY,YAAYV,eAAO,IAAAS,EAAAA,EAAI,GACjEE,GAAsB,KAIxBC,aACIC,cAAeC,EAAoB,CAC/B,eACA,iBACA,YACA,eACA,aACA,aACA,mBAEJC,SAAUC,EAAe,CACrB,CACI,eACA,CACIC,MAAO,EACPC,UAAW,iBACXC,aAAaZ,EAAAA,EAAAA,IAAG,qBAAsB,sBACtCa,QAASzB,IAGjB,CACI,iBACA,CACIwB,aAAaZ,EAAAA,EAAAA,IAAG,uBAAwB,sBACxCa,QAASnB,IAGjB,CACI,eACA,CACIoB,OAAQ,CACJC,KAAM,OACNC,eAAgB,WAGxB,CACI,CACI,cACA,CACIL,UAAW,aACXM,KAAMpB,EACNqB,IAAKjB,OAMzBkB,aAAcC,GAAmB,GACjC,CAAC,GACL9B,EAEE+B,EAAsBxB,GAE5ByB,EAAAA,EAAAA,mBAAkBhC,EAAAA,KAAe,IAC1BA,EACHiC,IAAAA,EAAK,WAAEhC,EAAU,cAAEiC,EAAa,SAAEC,IAC9B,MAAM,SACFjC,EAAQ,WACRI,EAAU,WACVG,EAAU,WACVI,EAAU,YACVuB,EAAW,aACXC,EAAY,aACZC,EAAY,cACZC,EAAa,UACbC,EAAS,aACTC,EAAY,oBACZC,EAAmB,sBACnBC,EAAqB,eACrBC,EAAc,kBACdC,EAAiB,iBACjBC,EAAgB,cAChBC,GACA9C,EAEE+C,EAAmB,CAAC,MAAO,SAAU,UACrCC,EAAeC,IACjB,MAAMC,EAAeC,OAAOF,GAE5B,OAAKE,OAAOC,SAASF,GAIdG,KAAKC,IAtFG,IAwFXD,KAAKE,IAAI1C,EAAoBqC,IALtBrC,GAQT2C,EAAsBT,EAAiBU,SAASZ,GAChDA,EACA,SACAa,EAAiB,cAAcF,IAE/BG,EAAmBX,EAAYF,GAE/Bc,GAAaC,EAAAA,EAAAA,eAAc,CAC7BzC,UAAW,CAAC,OAAQsC,GAAgBI,OAAOC,SAASC,KAAK,KACzDC,MAAO,CACH,wBAAyB,GAAGN,SAI9BO,GAAcC,EAAAA,EAAAA,SAAO,IACrB,YAAErD,EAAc,KAAOsD,EAAAA,EAAAA,WACxBC,IAAM,CACHvD,YAAauD,EAAO,qBAAqBC,UAAUpC,KAEvD,CAACA,KAEC,mBAAEqC,IAAuBC,EAAAA,EAAAA,aAAY,qBAErCC,EAAuBC,IACzB,IAAKA,EACD,OAAO,EAGX,MAAM,MACFC,EACAC,cAAeC,EAAe,CAAC,EAAC,MAChCC,EAAQ,CAAC,GACTJ,EAEEK,EAAeF,GAAcF,MAC7BK,EAAgBF,GAAOG,MAAMN,MAEnC,OACII,GACGC,GACAL,GACA,GAILO,GAAYd,EAAAA,EAAAA,WACbC,GACGlC,EAAckC,EAAO,QAAQc,SAAShD,GAAe,KACzD,CAACA,KAGLiD,EAAAA,EAAAA,WAAU,KACN,IAAKjD,IAAgB+C,EACjB,OAGJ,MAAMG,EAAeZ,EAAoBS,GAErCG,GAAgBA,IAAiB1C,GACjCV,EAAc,CAAEU,eAAgB0C,KAErC,CAAClD,EAAaQ,EAAgBuC,EAAWjD,KAE5CmD,EAAAA,EAAAA,WAAU,KACN,GAAIlB,EAAYoB,QACZ,OAGJ,GAAIxE,EAAYyE,OAAS,EAErB,YADArB,EAAYoB,SAAU,GAI1B,MAAME,EAAkB,GAoBxB,GAlBIvF,GACAuF,EAAgBC,MACZC,EAAAA,EAAAA,aAAY,eAAgB,CACxBvE,MAAO,EACPC,UAAW,iBACXE,QAASrB,KAKjBI,GACAmF,EAAgBC,MACZC,EAAAA,EAAAA,aAAY,iBAAkB,CAC1BpE,QAASjB,KAKjBG,GAAcI,EAAY,CAC1B,MAAM+E,GAASD,EAAAA,EAAAA,aAAY,cAAe,CACtCtE,UAAW,aACXM,KAAMlB,GAAcsB,EACpBH,IAAKf,QAAcgF,IAGjBC,GAAiBH,EAAAA,EAAAA,aACnB,eACA,CACInE,OAAQ,CACJC,KAAM,OACNC,eAAgB,WAGxB,CAACkE,IAGLH,EAAgBC,KAAKI,EACzB,CAE+B,IAA3BL,EAAgBD,SAIpBhB,EAAmBrC,EAAUsD,GAAiB,GAC9CtB,EAAYoB,SAAU,IACvB,CACC1E,EACAJ,EACA0B,EACAjC,EACAa,EAAYyE,OACZhB,EACAlE,IAGJ,MASMyF,EAAgBA,KAClB7D,EAAc,CACVE,YAAa,EACbC,aAAc,GACdC,aAAc,GACdM,eAAgB,MAwDhBvB,UAAW2E,EAAyBC,OAAQC,GApDrBC,MAC3B,MAAMC,EAAiB,CACnB,gBAAiB,mBACjB,eAAgB,mBAChB,cAAe,mBACfC,OAAQ,yBAGNC,EAAU,CAAC,yBAEb/D,GACA+D,EAAQZ,KAAK,yBAAyBnD,KAGtCM,GACAyD,EAAQZ,KAAK,2BAGjB,MAAMO,EAAS,CACXM,QAAS9D,EAAe,KAIxBwD,EAAOrB,MADPhC,EAAiB,EACF,QAAQJ,aAAqBI,OAE7B,GAAGJ,MAGtB,MAAMgE,EAAiB,GAkBvB,OAhBIJ,EAAe7D,IACfiE,EAAed,KAAKU,EAAe7D,IAGX,IAAxBG,GACA8D,EAAed,KAAK,cAAchD,QAGR,IAA1BC,GACA6D,EAAed,KAAK,cAAc/C,QAGlC6D,EAAehB,OAAS,IACxBS,EAAOQ,UAAYD,EAAevC,KAAK,MAGpC,CACH5C,UAAWiF,EAAQrC,KAAK,KACxBgC,WAKJE,GAEJ,OACIO,EAAAA,EAAAA,eAAAC,EAAAA,SAAA,MACID,EAAAA,EAAAA,eAACE,EAAAA,kBAAiB,MACdF,EAAAA,EAAAA,eAACG,EAAAA,UAAS,CACNC,OAAOpG,EAAAA,EAAAA,IAAG,aAAc,sBACxBqG,aAAa,IAEbL,EAAAA,EAAAA,eAACM,EAAAA,iBAAgB,MACbN,EAAAA,EAAAA,eAACO,EAAAA,YAAW,CACRC,SAlFDvC,IACnBzC,EAAc,CACVE,YAAauC,EAAMwC,GACnB9E,aAAcsC,EAAM/C,IACpBU,aAAcqC,EAAMyC,KAAO,GAC3BxE,eAAgB8B,EAAoBC,MA8EpB0C,aAAc,CAAC,SACfnE,MAAOd,EACPkF,OAAQA,EAAGC,WACPb,EAAAA,EAAAA,eAAA,OAAKxC,MAAO,CAAEsD,aAAc,SACtBnF,GASEqE,EAAAA,EAAAA,eAAAC,EAAAA,SAAA,MACID,EAAAA,EAAAA,eAAA,OACIe,IAAKpF,EACL+E,IAAK9E,EACL4B,MAAO,CACHU,MAAO,OACP8C,OAAQ,OACRF,aAAc,MACdG,aAAc,UAGtBjB,EAAAA,EAAAA,eAAA,OAAKxC,MAAO,CAAE0D,QAAS,OAAQC,IAAK,SAChCnB,EAAAA,EAAAA,eAACoB,EAAAA,OAAM,CACHC,QAASR,EACTS,QAAQ,YACR9D,MAAO,CAAE+D,KAAM,KAEdvH,EAAAA,EAAAA,IAAG,gBAAiB,wBAEzBgG,EAAAA,EAAAA,eAACoB,EAAAA,OAAM,CACHC,QAAShC,EACTiC,QAAQ,YACRE,eAAa,IAEZxH,EAAAA,EAAAA,IAAG,SAAU,0BAhC1BgG,EAAAA,EAAAA,eAACoB,EAAAA,OAAM,CACHC,QAASR,EACTS,QAAQ,YACR9D,MAAO,CAAEU,MAAO,UAEflE,EAAAA,EAAAA,IAAG,oBAAqB,2BAqChD2B,IACGqE,EAAAA,EAAAA,eAAAC,EAAAA,SAAA,MACID,EAAAA,EAAAA,eAACyB,EAAAA,cAAa,CACVC,OAAO1H,EAAAA,EAAAA,IAAG,iBAAkB,sBAC5BwC,MAAOX,EACP8F,QAAS,CACL,CAAED,OAAO1H,EAAAA,EAAAA,IAAG,eAAgB,sBAAuBwC,MAAO,gBAC1D,CAAEkF,OAAO1H,EAAAA,EAAAA,IAAG,cAAe,sBAAuBwC,MAAO,eACzD,CAAEkF,OAAO1H,EAAAA,EAAAA,IAAG,gBAAiB,sBAAuBwC,MAAO,iBAC3D,CAAEkF,OAAO1H,EAAAA,EAAAA,IAAG,eAAgB,sBAAuBwC,MAAO,gBAC1D,CAAEkF,OAAO1H,EAAAA,EAAAA,IAAG,cAAe,sBAAuBwC,MAAO,eACzD,CAAEkF,OAAO1H,EAAAA,EAAAA,IAAG,SAAU,sBAAuBwC,MAAO,WAExDoF,SAAWpF,GAAUhB,EAAc,CAAEK,cAAeW,OAGxDwD,EAAAA,EAAAA,eAAC6B,EAAAA,aAAY,CACTH,OAAO1H,EAAAA,EAAAA,IAAG,iBAAkB,sBAC5BwC,MAAOV,EACP8F,SAAWpF,GAAUhB,EAAc,CAAEM,UAAWU,IAChDK,IAAK,GACLC,IAAK,IACLgF,KAAM,KAGV9B,EAAAA,EAAAA,eAAC6B,EAAAA,aAAY,CACTH,OAAO1H,EAAAA,EAAAA,IAAG,cAAe,sBACzBwC,MAAOT,EACP6F,SAAWpF,GAAUhB,EAAc,CAAEO,aAAcS,IACnDK,IAAK,EACLC,IAAK,IACLgF,KAAM,KAGV9B,EAAAA,EAAAA,eAAC6B,EAAAA,aAAY,CACTH,OAAO1H,EAAAA,EAAAA,IAAG,uBAAwB,sBAClCwC,MAAOR,EACP4F,SAAWpF,GAAUhB,EAAc,CAAEQ,oBAAqBQ,IAC1DK,KAAM,IACNC,IAAK,IACLgF,KAAM,GACNC,MAAM/H,EAAAA,EAAAA,IAAG,yCAA0C,yBAGvDgG,EAAAA,EAAAA,eAAC6B,EAAAA,aAAY,CACTH,OAAO1H,EAAAA,EAAAA,IAAG,yBAA0B,sBACpCwC,MAAOP,EACP2F,SAAWpF,GAAUhB,EAAc,CAAES,sBAAuBO,IAC5DK,KAAM,IACNC,IAAK,IACLgF,KAAM,GACNC,MAAM/H,EAAAA,EAAAA,IAAG,4CAA6C,yBAG1DgG,EAAAA,EAAAA,eAACgC,EAAAA,cAAa,CACVN,OAAO1H,EAAAA,EAAAA,IAAG,iBAAkB,sBAC5BiI,QAAS9F,EACTyF,SAAWpF,GAAUhB,EAAc,CAAEW,kBAAmBK,IACxDuF,MAAM/H,EAAAA,EAAAA,IAAG,+CAAgD,2BAKzEgG,EAAAA,EAAAA,eAACG,EAAAA,UAAS,CACNC,OAAOpG,EAAAA,EAAAA,IAAG,iBAAkB,sBAC5BqG,aAAa,IAEbL,EAAAA,EAAAA,eAACyB,EAAAA,cAAa,CACVC,OAAO1H,EAAAA,EAAAA,IAAG,qBAAsB,sBAChCwC,MAAOO,EACP4E,QAAS,CACL,CACID,OAAO1H,EAAAA,EAAAA,IAAG,MAAO,sBACjBwC,MAAO,OAEX,CACIkF,OAAO1H,EAAAA,EAAAA,IAAG,SAAU,sBACpBwC,MAAO,UAEX,CACIkF,OAAO1H,EAAAA,EAAAA,IAAG,SAAU,sBACpBwC,MAAO,WAGfoF,SAAWpF,IACHF,EAAiBU,SAASR,IAC1BhB,EAAc,CAAEY,iBAAkBI,QAI9CwD,EAAAA,EAAAA,eAAC6B,EAAAA,aAAY,CACTH,OAAO1H,EAAAA,EAAAA,IAAG,yBAA0B,sBACpCwC,MAAOU,EACP0E,SAAWpF,GACPhB,EAAc,CAAEa,cAAeE,EAAYC,KAE/CK,IAAKzC,EACL0C,IAhcD,IAicCgF,KAAM,GACNI,YAAU,EACVH,MAAM/H,EAAAA,EAAAA,IAAG,qEAAsE,2BAK3FgG,EAAAA,EAAAA,eAAA,cAAa7C,IACT6C,EAAAA,EAAAA,eAAA,OACIrF,UAAU,0BACV,cAAY,OACZwH,KAAK,iBAERxG,IACGqE,EAAAA,EAAAA,eAAA,OAAKrF,UAAW2E,EAAyB9B,MAAOgC,IAC5CQ,EAAAA,EAAAA,eAAA,OACIe,IAAKpF,EACL+E,IAAK9E,EACLjB,UAAU,6BAItBqF,EAAAA,EAAAA,eAAA,OAAKrF,UAAU,iBACXqF,EAAAA,EAAAA,eAACoC,EAAAA,YAAW,CACR9H,cAAgBC,EAChBC,SAAWC,EACXU,aAAeC,MAMvC,EACAiH,KAAIA,KACOrC,EAAAA,EAAAA,eAACoC,EAAAA,YAAYE,QAAO,O","sources":["webpack://mccullough-digital-theme/external window \"React\"","webpack://mccullough-digital-theme/external window [\"wp\",\"blocks\"]","webpack://mccullough-digital-theme/external window [\"wp\",\"i18n\"]","webpack://mccullough-digital-theme/external window [\"wp\",\"element\"]","webpack://mccullough-digital-theme/external window [\"wp\",\"data\"]","webpack://mccullough-digital-theme/external window [\"wp\",\"blockEditor\"]","webpack://mccullough-digital-theme/external window [\"wp\",\"components\"]","webpack://mccullough-digital-theme/./blocks/hero/editor.js"],"sourcesContent":["const __WEBPACK_NAMESPACE_OBJECT__ = window[\"React\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blocks\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"i18n\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"element\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"data\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blockEditor\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"components\"];","import { registerBlockType, createBlock } from '@wordpress/blocks';\nimport { __ } from '@wordpress/i18n';\nimport { useEffect, useRef } from '@wordpress/element';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport {\n    useBlockProps,\n    InnerBlocks,\n    InspectorControls,\n    MediaUpload,\n    MediaUploadCheck,\n} from '@wordpress/block-editor';\nimport {\n    PanelBody,\n    Button,\n    SelectControl,\n    RangeControl,\n    ToggleControl,\n} from '@wordpress/components';\n\nimport metadata from './block.json';\n\nconst defaultHeadline = metadata?.attributes?.headline?.default ?? '';\nconst defaultSubheading = metadata?.attributes?.subheading?.default ?? '';\nconst defaultButtonText = metadata?.attributes?.buttonText?.default\n    ?? __('Start a Project', 'mccullough-digital');\nconst defaultButtonLink = metadata?.attributes?.buttonLink?.default ?? '';\nconst MIN_CONTENT_OFFSET = -300; // Allow moving content UP\nconst MAX_CONTENT_OFFSET = 240;\n\nconst {\n    innerBlocks: {\n        allowedBlocks: allowedHeroBlocks = [\n            'core/heading',\n            'core/paragraph',\n            'core/list',\n            'core/buttons',\n            'core/group',\n            'core/image',\n            'core/media-text',\n        ],\n        template: heroTemplate = [\n            [\n                'core/heading',\n                {\n                    level: 1,\n                    className: 'hero__headline',\n                    placeholder: __('Add hero headline…', 'mccullough-digital'),\n                    content: defaultHeadline,\n                },\n            ],\n            [\n                'core/paragraph',\n                {\n                    placeholder: __('Add supporting copy…', 'mccullough-digital'),\n                    content: defaultSubheading,\n                },\n            ],\n            [\n                'core/buttons',\n                {\n                    layout: {\n                        type: 'flex',\n                        justifyContent: 'center',\n                    },\n                },\n                [\n                    [\n                        'core/button',\n                        {\n                            className: 'cta-button',\n                            text: defaultButtonText,\n                            url: defaultButtonLink,\n                        },\n                    ],\n                ],\n            ],\n        ],\n        templateLock: heroTemplateLock = false,\n    } = {},\n} = metadata;\n\nconst DEFAULT_BUTTON_TEXT = defaultButtonText;\n\nregisterBlockType(metadata.name, {\n    ...metadata,\n    edit({ attributes, setAttributes, clientId }) {\n        const { \n            headline, \n            subheading, \n            buttonText, \n            buttonLink,\n            heroImageId,\n            heroImageUrl,\n            heroImageAlt,\n            imagePosition,\n            imageSize,\n            imageOpacity,\n            imageVerticalOffset,\n            imageHorizontalOffset,\n            heroImageWidth,\n            hideImageOnMobile,\n            contentAlignment,\n            contentOffset,\n        } = attributes;\n\n        const alignmentOptions = ['top', 'center', 'bottom'];\n        const clampOffset = (value) => {\n            const numericValue = Number(value);\n\n            if (!Number.isFinite(numericValue)) {\n                return MIN_CONTENT_OFFSET;\n            }\n\n            return Math.min(\n                MAX_CONTENT_OFFSET,\n                Math.max(MIN_CONTENT_OFFSET, numericValue)\n            );\n        };\n        const normalizedAlignment = alignmentOptions.includes(contentAlignment)\n            ? contentAlignment\n            : 'center';\n        const alignmentClass = `is-content-${normalizedAlignment}`;\n\n        const normalizedOffset = clampOffset(contentOffset);\n\n        const blockProps = useBlockProps({\n            className: ['hero', alignmentClass].filter(Boolean).join(' '),\n            style: {\n                '--hero-content-offset': `${normalizedOffset}px`,\n            },\n        });\n\n        const hasMigrated = useRef(false);\n        const { innerBlocks = [] } = useSelect(\n            (select) => ({\n                innerBlocks: select('core/block-editor').getBlocks(clientId),\n            }),\n            [clientId]\n        );\n        const { replaceInnerBlocks } = useDispatch('core/block-editor');\n\n        const extractNaturalWidth = (media) => {\n            if (!media) {\n                return 0;\n            }\n\n            const {\n                width,\n                media_details: mediaDetails = {},\n                sizes = {},\n            } = media;\n\n            const detailsWidth = mediaDetails?.width;\n            const fullSizeWidth = sizes?.full?.width;\n\n            return (\n                detailsWidth\n                || fullSizeWidth\n                || width\n                || 0\n            );\n        };\n\n        const heroMedia = useSelect(\n            (select) =>\n                heroImageId ? select('core').getMedia(heroImageId) : null,\n            [heroImageId]\n        );\n\n        useEffect(() => {\n            if (!heroImageId || !heroMedia) {\n                return;\n            }\n\n            const naturalWidth = extractNaturalWidth(heroMedia);\n\n            if (naturalWidth && naturalWidth !== heroImageWidth) {\n                setAttributes({ heroImageWidth: naturalWidth });\n            }\n        }, [heroImageId, heroImageWidth, heroMedia, setAttributes]);\n\n        useEffect(() => {\n            if (hasMigrated.current) {\n                return;\n            }\n\n            if (innerBlocks.length > 0) {\n                hasMigrated.current = true;\n                return;\n            }\n\n            const generatedBlocks = [];\n\n            if (headline) {\n                generatedBlocks.push(\n                    createBlock('core/heading', {\n                        level: 1,\n                        className: 'hero__headline',\n                        content: headline,\n                    })\n                );\n            }\n\n            if (subheading) {\n                generatedBlocks.push(\n                    createBlock('core/paragraph', {\n                        content: subheading,\n                    })\n                );\n            }\n\n            if (buttonText || buttonLink) {\n                const button = createBlock('core/button', {\n                    className: 'cta-button',\n                    text: buttonText || DEFAULT_BUTTON_TEXT,\n                    url: buttonLink || undefined,\n                });\n\n                const buttonsWrapper = createBlock(\n                    'core/buttons',\n                    {\n                        layout: {\n                            type: 'flex',\n                            justifyContent: 'center',\n                        },\n                    },\n                    [button]\n                );\n\n                generatedBlocks.push(buttonsWrapper);\n            }\n\n            if (generatedBlocks.length === 0) {\n                return;\n            }\n\n            replaceInnerBlocks(clientId, generatedBlocks, false);\n            hasMigrated.current = true;\n        }, [\n            buttonLink,\n            buttonText,\n            clientId,\n            headline,\n            innerBlocks.length,\n            replaceInnerBlocks,\n            subheading,\n        ]);\n\n        const onSelectImage = (media) => {\n            setAttributes({\n                heroImageId: media.id,\n                heroImageUrl: media.url,\n                heroImageAlt: media.alt || '',\n                heroImageWidth: extractNaturalWidth(media),\n            });\n        };\n\n        const onRemoveImage = () => {\n            setAttributes({\n                heroImageId: 0,\n                heroImageUrl: '',\n                heroImageAlt: '',\n                heroImageWidth: 0,\n            });\n        };\n\n        const buildImagePresentation = () => {\n            const baseTransforms = {\n                'bottom-center': 'translateX(-50%)',\n                'center-right': 'translateY(-50%)',\n                'center-left': 'translateY(-50%)',\n                center: 'translate(-50%, -50%)',\n            };\n\n            const classes = ['hero__image-container'];\n\n            if (imagePosition) {\n                classes.push(`hero__image-position--${imagePosition}`);\n            }\n\n            if (hideImageOnMobile) {\n                classes.push('hero__image-hide-mobile');\n            }\n\n            const styles = {\n                opacity: imageOpacity / 100,\n            };\n\n            if (heroImageWidth > 0) {\n                styles.width = `calc(${imageSize} / 100 * ${heroImageWidth}px)`;\n            } else {\n                styles.width = `${imageSize}vw`;\n            }\n\n            const transformParts = [];\n\n            if (baseTransforms[imagePosition]) {\n                transformParts.push(baseTransforms[imagePosition]);\n            }\n\n            if (imageVerticalOffset !== 0) {\n                transformParts.push(`translateY(${imageVerticalOffset}px)`);\n            }\n\n            if (imageHorizontalOffset !== 0) {\n                transformParts.push(`translateX(${imageHorizontalOffset}px)`);\n            }\n\n            if (transformParts.length > 0) {\n                styles.transform = transformParts.join(' ');\n            }\n\n            return {\n                className: classes.join(' '),\n                styles,\n            };\n        };\n\n        const { className: imageContainerClassName, styles: imageStyles } =\n            buildImagePresentation();\n\n        return (\n            <>\n                <InspectorControls>\n                    <PanelBody\n                        title={__('Hero Image', 'mccullough-digital')}\n                        initialOpen={true}\n                    >\n                        <MediaUploadCheck>\n                            <MediaUpload\n                                onSelect={onSelectImage}\n                                allowedTypes={['image']}\n                                value={heroImageId}\n                                render={({ open }) => (\n                                    <div style={{ marginBottom: '16px' }}>\n                                        {!heroImageUrl ? (\n                                            <Button\n                                                onClick={open}\n                                                variant=\"secondary\"\n                                                style={{ width: '100%' }}\n                                            >\n                                                {__('Select Hero Image', 'mccullough-digital')}\n                                            </Button>\n                                        ) : (\n                                            <>\n                                                <img\n                                                    src={heroImageUrl}\n                                                    alt={heroImageAlt}\n                                                    style={{\n                                                        width: '100%',\n                                                        height: 'auto',\n                                                        marginBottom: '8px',\n                                                        borderRadius: '4px',\n                                                    }}\n                                                />\n                                                <div style={{ display: 'flex', gap: '8px' }}>\n                                                    <Button\n                                                        onClick={open}\n                                                        variant=\"secondary\"\n                                                        style={{ flex: 1 }}\n                                                    >\n                                                        {__('Replace Image', 'mccullough-digital')}\n                                                    </Button>\n                                                    <Button\n                                                        onClick={onRemoveImage}\n                                                        variant=\"secondary\"\n                                                        isDestructive\n                                                    >\n                                                        {__('Remove', 'mccullough-digital')}\n                                                    </Button>\n                                                </div>\n                                            </>\n                                        )}\n                                    </div>\n                                )}\n                            />\n                        </MediaUploadCheck>\n\n                        {heroImageUrl && (\n                            <>\n                                <SelectControl\n                                    label={__('Image Position', 'mccullough-digital')}\n                                    value={imagePosition}\n                                    options={[\n                                        { label: __('Bottom Right', 'mccullough-digital'), value: 'bottom-right' },\n                                        { label: __('Bottom Left', 'mccullough-digital'), value: 'bottom-left' },\n                                        { label: __('Bottom Center', 'mccullough-digital'), value: 'bottom-center' },\n                                        { label: __('Center Right', 'mccullough-digital'), value: 'center-right' },\n                                        { label: __('Center Left', 'mccullough-digital'), value: 'center-left' },\n                                        { label: __('Center', 'mccullough-digital'), value: 'center' },\n                                    ]}\n                                    onChange={(value) => setAttributes({ imagePosition: value })}\n                                />\n\n                                <RangeControl\n                                    label={__('Image Size (%)', 'mccullough-digital')}\n                                    value={imageSize}\n                                    onChange={(value) => setAttributes({ imageSize: value })}\n                                    min={10}\n                                    max={200}\n                                    step={5}\n                                />\n\n                                <RangeControl\n                                    label={__('Opacity (%)', 'mccullough-digital')}\n                                    value={imageOpacity}\n                                    onChange={(value) => setAttributes({ imageOpacity: value })}\n                                    min={0}\n                                    max={100}\n                                    step={5}\n                                />\n\n                                <RangeControl\n                                    label={__('Vertical Offset (px)', 'mccullough-digital')}\n                                    value={imageVerticalOffset}\n                                    onChange={(value) => setAttributes({ imageVerticalOffset: value })}\n                                    min={-200}\n                                    max={200}\n                                    step={10}\n                                    help={__('Positive moves down, negative moves up', 'mccullough-digital')}\n                                />\n\n                                <RangeControl\n                                    label={__('Horizontal Offset (px)', 'mccullough-digital')}\n                                    value={imageHorizontalOffset}\n                                    onChange={(value) => setAttributes({ imageHorizontalOffset: value })}\n                                    min={-200}\n                                    max={200}\n                                    step={10}\n                                    help={__('Positive moves right, negative moves left', 'mccullough-digital')}\n                                />\n\n                                <ToggleControl\n                                    label={__('Hide on Mobile', 'mccullough-digital')}\n                                    checked={hideImageOnMobile}\n                                    onChange={(value) => setAttributes({ hideImageOnMobile: value })}\n                                    help={__('Hide the image on screens smaller than 768px', 'mccullough-digital')}\n                                />\n                            </>\n                        )}\n                    </PanelBody>\n                    <PanelBody\n                        title={__('Content Layout', 'mccullough-digital')}\n                        initialOpen={false}\n                    >\n                        <SelectControl\n                            label={__('Vertical Alignment', 'mccullough-digital')}\n                            value={normalizedAlignment}\n                            options={[\n                                {\n                                    label: __('Top', 'mccullough-digital'),\n                                    value: 'top',\n                                },\n                                {\n                                    label: __('Center', 'mccullough-digital'),\n                                    value: 'center',\n                                },\n                                {\n                                    label: __('Bottom', 'mccullough-digital'),\n                                    value: 'bottom',\n                                },\n                            ]}\n                            onChange={(value) => {\n                                if (alignmentOptions.includes(value)) {\n                                    setAttributes({ contentAlignment: value });\n                                }\n                            }}\n                        />\n                        <RangeControl\n                            label={__('Vertical Position (px)', 'mccullough-digital')}\n                            value={normalizedOffset}\n                            onChange={(value) =>\n                                setAttributes({ contentOffset: clampOffset(value) })\n                            }\n                            min={MIN_CONTENT_OFFSET}\n                            max={MAX_CONTENT_OFFSET}\n                            step={10}\n                            allowReset\n                            help={__('Negative values move content UP, positive values move content DOWN', 'mccullough-digital')}\n                        />\n                    </PanelBody>\n                </InspectorControls>\n\n                <section {...blockProps}>\n                    <div\n                        className=\"hero-canvas-placeholder\"\n                        aria-hidden=\"true\"\n                        role=\"presentation\"\n                    />\n                    {heroImageUrl && (\n                        <div className={imageContainerClassName} style={imageStyles}>\n                            <img\n                                src={heroImageUrl}\n                                alt={heroImageAlt}\n                                className=\"hero__decorative-image\"\n                            />\n                        </div>\n                    )}\n                    <div className=\"hero-content\">\n                        <InnerBlocks\n                            allowedBlocks={ allowedHeroBlocks }\n                            template={ heroTemplate }\n                            templateLock={ heroTemplateLock }\n                        />\n                    </div>\n                </section>\n            </>\n        );\n    },\n    save() {\n        return <InnerBlocks.Content />;\n    },\n});\n"],"names":["window","defaultHeadline","_metadata$attributes$","metadata","attributes","headline","default","defaultSubheading","_metadata$attributes$2","subheading","defaultButtonText","_metadata$attributes$3","buttonText","__","defaultButtonLink","_metadata$attributes$4","buttonLink","MIN_CONTENT_OFFSET","innerBlocks","allowedBlocks","allowedHeroBlocks","template","heroTemplate","level","className","placeholder","content","layout","type","justifyContent","text","url","templateLock","heroTemplateLock","DEFAULT_BUTTON_TEXT","registerBlockType","edit","setAttributes","clientId","heroImageId","heroImageUrl","heroImageAlt","imagePosition","imageSize","imageOpacity","imageVerticalOffset","imageHorizontalOffset","heroImageWidth","hideImageOnMobile","contentAlignment","contentOffset","alignmentOptions","clampOffset","value","numericValue","Number","isFinite","Math","min","max","normalizedAlignment","includes","alignmentClass","normalizedOffset","blockProps","useBlockProps","filter","Boolean","join","style","hasMigrated","useRef","useSelect","select","getBlocks","replaceInnerBlocks","useDispatch","extractNaturalWidth","media","width","media_details","mediaDetails","sizes","detailsWidth","fullSizeWidth","full","heroMedia","getMedia","useEffect","naturalWidth","current","length","generatedBlocks","push","createBlock","button","undefined","buttonsWrapper","onRemoveImage","imageContainerClassName","styles","imageStyles","buildImagePresentation","baseTransforms","center","classes","opacity","transformParts","transform","createElement","Fragment","InspectorControls","PanelBody","title","initialOpen","MediaUploadCheck","MediaUpload","onSelect","id","alt","allowedTypes","render","open","marginBottom","src","height","borderRadius","display","gap","Button","onClick","variant","flex","isDestructive","SelectControl","label","options","onChange","RangeControl","step","help","ToggleControl","checked","allowReset","role","InnerBlocks","save","Content"],"sourceRoot":""}