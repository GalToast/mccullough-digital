{"version":3,"file":"blocks/hero/editor.js","mappings":"mBAAA,MAAM,EAA+BA,OAAc,MCA7C,EAA+BA,OAAW,GAAU,OCApD,EAA+BA,OAAW,GAAQ,KCAlD,EAA+BA,OAAW,GAAW,QCArD,EAA+BA,OAAW,GAAQ,KCAlD,EAA+BA,OAAW,GAAe,YCAzD,EAA+BA,OAAW,GAAc,W,omECqB9D,MAAMC,EAAyD,QAA1CC,EAAGC,GAAUC,YAAYC,UAAUC,eAAO,IAAAJ,EAAAA,EAAI,GAC7DK,EAA6D,QAA5CC,EAAGL,GAAUC,YAAYK,YAAYH,eAAO,IAAAE,EAAAA,EAAI,GACjEE,EAA6D,QAA5CC,EAAGR,GAAUC,YAAYQ,YAAYN,eAAO,IAAAK,EAAAA,GAC5DE,EAAAA,EAAAA,IAAG,kBAAmB,sBACvBC,EAA6D,QAA5CC,EAAGZ,GAAUC,YAAYY,YAAYV,eAAO,IAAAS,EAAAA,EAAI,IAGnEE,aACIC,cAAeC,EAAoB,CAC/B,eACA,iBACA,YACA,eACA,aACA,aACA,mBAEJC,SAAUC,EAAe,CACrB,CACI,eACA,CACIC,MAAO,EACPC,UAAW,iBACXC,aAAaX,EAAAA,EAAAA,IAAG,qBAAsB,sBACtCY,QAASxB,IAGjB,CACI,iBACA,CACIuB,aAAaX,EAAAA,EAAAA,IAAG,uBAAwB,sBACxCY,QAASlB,IAGjB,CACI,eACA,CACImB,OAAQ,CACJC,KAAM,OACNC,eAAgB,WAGxB,CACI,CACI,cACA,CACIL,UAAW,aACXM,KAAMnB,EACNoB,IAAKhB,OAMzBiB,aAAcC,GAAmB,GACjC,CAAC,GACL7B,EAEE8B,EAAsBvB,GAE5BwB,EAAAA,EAAAA,mBAAkB/B,EAAAA,KAAe,IAC1BA,EACHgC,IAAAA,EAAK,WAAE/B,EAAU,cAAEgC,EAAa,SAAEC,IAC9B,MAAM,SACFhC,EAAQ,WACRI,EAAU,WACVG,EAAU,WACVI,EAAU,YACVsB,EAAW,aACXC,EAAY,aACZC,EAAY,cACZC,EAAa,UACbC,EAAS,aACTC,EAAY,oBACZC,EAAmB,kBACnBC,GACAzC,EAEE0C,GAAaC,EAAAA,EAAAA,eAAc,CAC7BxB,UAAW,SAGTyB,GAAcC,EAAAA,EAAAA,SAAO,IACrB,YAAEhC,EAAc,KAAOiC,EAAAA,EAAAA,WACxBC,IAAM,CACHlC,YAAakC,EAAO,qBAAqBC,UAAUf,KAEvD,CAACA,KAEC,mBAAEgB,IAAuBC,EAAAA,EAAAA,aAAY,sBAE3CC,EAAAA,EAAAA,WAAU,KACN,GAAIP,EAAYQ,QACZ,OAGJ,GAAIvC,EAAYwC,OAAS,EAErB,YADAT,EAAYQ,SAAU,GAI1B,MAAME,EAAkB,GAoBxB,GAlBIrD,GACAqD,EAAgBC,MACZC,EAAAA,EAAAA,aAAY,eAAgB,CACxBtC,MAAO,EACPC,UAAW,iBACXE,QAASpB,KAKjBI,GACAiD,EAAgBC,MACZC,EAAAA,EAAAA,aAAY,iBAAkB,CAC1BnC,QAAShB,KAKjBG,GAAcI,EAAY,CAC1B,MAAM6C,GAASD,EAAAA,EAAAA,aAAY,cAAe,CACtCrC,UAAW,aACXM,KAAMjB,GAAcqB,EACpBH,IAAKd,QAAc8C,IAGjBC,GAAiBH,EAAAA,EAAAA,aACnB,eACA,CACIlC,OAAQ,CACJC,KAAM,OACNC,eAAgB,WAGxB,CAACiC,IAGLH,EAAgBC,KAAKI,EACzB,CAE+B,IAA3BL,EAAgBD,SAIpBJ,EAAmBhB,EAAUqB,GAAiB,GAC9CV,EAAYQ,SAAU,IACvB,CACCxC,EACAJ,EACAyB,EACAhC,EACAY,EAAYwC,OACZJ,EACA5C,IAGJ,MAQMuD,EAAgBA,KAClB5B,EAAc,CACVE,YAAa,EACbC,aAAc,GACdC,aAAc,MAItB,OACIyB,EAAAA,EAAAA,eAAAC,EAAAA,SAAA,MACID,EAAAA,EAAAA,eAACE,EAAAA,kBAAiB,MACdF,EAAAA,EAAAA,eAACG,EAAAA,UAAS,CACNC,OAAOxD,EAAAA,EAAAA,IAAG,aAAc,sBACxByD,aAAa,IAEbL,EAAAA,EAAAA,eAACM,EAAAA,iBAAgB,MACbN,EAAAA,EAAAA,eAACO,EAAAA,YAAW,CACRC,SAzBDC,IACnBtC,EAAc,CACVE,YAAaoC,EAAMC,GACnBpC,aAAcmC,EAAM5C,IACpBU,aAAckC,EAAME,KAAO,MAsBXC,aAAc,CAAC,SACfC,MAAOxC,EACPyC,OAAQA,EAAGC,WACPf,EAAAA,EAAAA,eAAA,OAAKgB,MAAO,CAAEC,aAAc,SACtB3C,GASE0B,EAAAA,EAAAA,eAAAC,EAAAA,SAAA,MACID,EAAAA,EAAAA,eAAA,OACIkB,IAAK5C,EACLqC,IAAKpC,EACLyC,MAAO,CACHG,MAAO,OACPC,OAAQ,OACRH,aAAc,MACdI,aAAc,UAGtBrB,EAAAA,EAAAA,eAAA,OAAKgB,MAAO,CAAEM,QAAS,OAAQC,IAAK,SAChCvB,EAAAA,EAAAA,eAACwB,EAAAA,OAAM,CACHC,QAASV,EACTW,QAAQ,YACRV,MAAO,CAAEW,KAAM,KAEd/E,EAAAA,EAAAA,IAAG,gBAAiB,wBAEzBoD,EAAAA,EAAAA,eAACwB,EAAAA,OAAM,CACHC,QAAS1B,EACT2B,QAAQ,YACRE,eAAa,IAEZhF,EAAAA,EAAAA,IAAG,SAAU,0BAhC1BoD,EAAAA,EAAAA,eAACwB,EAAAA,OAAM,CACHC,QAASV,EACTW,QAAQ,YACRV,MAAO,CAAEG,MAAO,UAEfvE,EAAAA,EAAAA,IAAG,oBAAqB,2BAqChD0B,IACG0B,EAAAA,EAAAA,eAAAC,EAAAA,SAAA,MACID,EAAAA,EAAAA,eAAC6B,EAAAA,cAAa,CACVC,OAAOlF,EAAAA,EAAAA,IAAG,iBAAkB,sBAC5BiE,MAAOrC,EACPuD,QAAS,CACL,CAAED,OAAOlF,EAAAA,EAAAA,IAAG,eAAgB,sBAAuBiE,MAAO,gBAC1D,CAAEiB,OAAOlF,EAAAA,EAAAA,IAAG,cAAe,sBAAuBiE,MAAO,eACzD,CAAEiB,OAAOlF,EAAAA,EAAAA,IAAG,gBAAiB,sBAAuBiE,MAAO,iBAC3D,CAAEiB,OAAOlF,EAAAA,EAAAA,IAAG,eAAgB,sBAAuBiE,MAAO,gBAC1D,CAAEiB,OAAOlF,EAAAA,EAAAA,IAAG,cAAe,sBAAuBiE,MAAO,eACzD,CAAEiB,OAAOlF,EAAAA,EAAAA,IAAG,SAAU,sBAAuBiE,MAAO,WAExDmB,SAAWnB,GAAU1C,EAAc,CAAEK,cAAeqC,OAGxDb,EAAAA,EAAAA,eAACiC,EAAAA,aAAY,CACTH,OAAOlF,EAAAA,EAAAA,IAAG,iBAAkB,sBAC5BiE,MAAOpC,EACPuD,SAAWnB,GAAU1C,EAAc,CAAEM,UAAWoC,IAChDqB,IAAK,GACLC,IAAK,IACLC,KAAM,KAGVpC,EAAAA,EAAAA,eAACiC,EAAAA,aAAY,CACTH,OAAOlF,EAAAA,EAAAA,IAAG,cAAe,sBACzBiE,MAAOnC,EACPsD,SAAWnB,GAAU1C,EAAc,CAAEO,aAAcmC,IACnDqB,IAAK,EACLC,IAAK,IACLC,KAAM,KAGVpC,EAAAA,EAAAA,eAACiC,EAAAA,aAAY,CACTH,OAAOlF,EAAAA,EAAAA,IAAG,uBAAwB,sBAClCiE,MAAOlC,EACPqD,SAAWnB,GAAU1C,EAAc,CAAEQ,oBAAqBkC,IAC1DqB,KAAM,IACNC,IAAK,IACLC,KAAM,GACNC,MAAMzF,EAAAA,EAAAA,IAAG,yCAA0C,yBAGvDoD,EAAAA,EAAAA,eAACsC,EAAAA,cAAa,CACVR,OAAOlF,EAAAA,EAAAA,IAAG,iBAAkB,sBAC5B2F,QAAS3D,EACToD,SAAWnB,GAAU1C,EAAc,CAAES,kBAAmBiC,IACxDwB,MAAMzF,EAAAA,EAAAA,IAAG,+CAAgD,4BAO7EoD,EAAAA,EAAAA,eAAA,cAAanB,IACTmB,EAAAA,EAAAA,eAAA,OACI1C,UAAU,0BACV,cAAY,OACZkF,KAAK,iBAERlE,IACG0B,EAAAA,EAAAA,eAAA,OACI1C,UAAU,wBACV0D,MAAO,CACHyB,QAAS/D,EAAe,OAG5BsB,EAAAA,EAAAA,eAAA,OACIkB,IAAK5C,EACLqC,IAAKpC,EACLjB,UAAU,6BAItB0C,EAAAA,EAAAA,eAAA,OAAK1C,UAAU,iBACX0C,EAAAA,EAAAA,eAAC0C,EAAAA,YAAW,CACRzF,cAAgBC,EAChBC,SAAWC,EACXU,aAAeC,MAMvC,EACA4E,KAAIA,KACO3C,EAAAA,EAAAA,eAAC0C,EAAAA,YAAYE,QAAO,O","sources":["webpack://mccullough-digital-theme/external window \"React\"","webpack://mccullough-digital-theme/external window [\"wp\",\"blocks\"]","webpack://mccullough-digital-theme/external window [\"wp\",\"i18n\"]","webpack://mccullough-digital-theme/external window [\"wp\",\"element\"]","webpack://mccullough-digital-theme/external window [\"wp\",\"data\"]","webpack://mccullough-digital-theme/external window [\"wp\",\"blockEditor\"]","webpack://mccullough-digital-theme/external window [\"wp\",\"components\"]","webpack://mccullough-digital-theme/./blocks/hero/editor.js"],"sourcesContent":["const __WEBPACK_NAMESPACE_OBJECT__ = window[\"React\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blocks\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"i18n\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"element\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"data\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blockEditor\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"components\"];","import { registerBlockType, createBlock } from '@wordpress/blocks';\nimport { __ } from '@wordpress/i18n';\nimport { useEffect, useRef } from '@wordpress/element';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport {\n    useBlockProps,\n    InnerBlocks,\n    InspectorControls,\n    MediaUpload,\n    MediaUploadCheck,\n} from '@wordpress/block-editor';\nimport {\n    PanelBody,\n    Button,\n    SelectControl,\n    RangeControl,\n    ToggleControl,\n} from '@wordpress/components';\n\nimport metadata from './block.json';\n\nconst defaultHeadline = metadata?.attributes?.headline?.default ?? '';\nconst defaultSubheading = metadata?.attributes?.subheading?.default ?? '';\nconst defaultButtonText = metadata?.attributes?.buttonText?.default\n    ?? __('Start a Project', 'mccullough-digital');\nconst defaultButtonLink = metadata?.attributes?.buttonLink?.default ?? '';\n\nconst {\n    innerBlocks: {\n        allowedBlocks: allowedHeroBlocks = [\n            'core/heading',\n            'core/paragraph',\n            'core/list',\n            'core/buttons',\n            'core/group',\n            'core/image',\n            'core/media-text',\n        ],\n        template: heroTemplate = [\n            [\n                'core/heading',\n                {\n                    level: 1,\n                    className: 'hero__headline',\n                    placeholder: __('Add hero headline…', 'mccullough-digital'),\n                    content: defaultHeadline,\n                },\n            ],\n            [\n                'core/paragraph',\n                {\n                    placeholder: __('Add supporting copy…', 'mccullough-digital'),\n                    content: defaultSubheading,\n                },\n            ],\n            [\n                'core/buttons',\n                {\n                    layout: {\n                        type: 'flex',\n                        justifyContent: 'center',\n                    },\n                },\n                [\n                    [\n                        'core/button',\n                        {\n                            className: 'cta-button',\n                            text: defaultButtonText,\n                            url: defaultButtonLink,\n                        },\n                    ],\n                ],\n            ],\n        ],\n        templateLock: heroTemplateLock = false,\n    } = {},\n} = metadata;\n\nconst DEFAULT_BUTTON_TEXT = defaultButtonText;\n\nregisterBlockType(metadata.name, {\n    ...metadata,\n    edit({ attributes, setAttributes, clientId }) {\n        const { \n            headline, \n            subheading, \n            buttonText, \n            buttonLink,\n            heroImageId,\n            heroImageUrl,\n            heroImageAlt,\n            imagePosition,\n            imageSize,\n            imageOpacity,\n            imageVerticalOffset,\n            hideImageOnMobile,\n        } = attributes;\n        \n        const blockProps = useBlockProps({\n            className: 'hero',\n        });\n\n        const hasMigrated = useRef(false);\n        const { innerBlocks = [] } = useSelect(\n            (select) => ({\n                innerBlocks: select('core/block-editor').getBlocks(clientId),\n            }),\n            [clientId]\n        );\n        const { replaceInnerBlocks } = useDispatch('core/block-editor');\n\n        useEffect(() => {\n            if (hasMigrated.current) {\n                return;\n            }\n\n            if (innerBlocks.length > 0) {\n                hasMigrated.current = true;\n                return;\n            }\n\n            const generatedBlocks = [];\n\n            if (headline) {\n                generatedBlocks.push(\n                    createBlock('core/heading', {\n                        level: 1,\n                        className: 'hero__headline',\n                        content: headline,\n                    })\n                );\n            }\n\n            if (subheading) {\n                generatedBlocks.push(\n                    createBlock('core/paragraph', {\n                        content: subheading,\n                    })\n                );\n            }\n\n            if (buttonText || buttonLink) {\n                const button = createBlock('core/button', {\n                    className: 'cta-button',\n                    text: buttonText || DEFAULT_BUTTON_TEXT,\n                    url: buttonLink || undefined,\n                });\n\n                const buttonsWrapper = createBlock(\n                    'core/buttons',\n                    {\n                        layout: {\n                            type: 'flex',\n                            justifyContent: 'center',\n                        },\n                    },\n                    [button]\n                );\n\n                generatedBlocks.push(buttonsWrapper);\n            }\n\n            if (generatedBlocks.length === 0) {\n                return;\n            }\n\n            replaceInnerBlocks(clientId, generatedBlocks, false);\n            hasMigrated.current = true;\n        }, [\n            buttonLink,\n            buttonText,\n            clientId,\n            headline,\n            innerBlocks.length,\n            replaceInnerBlocks,\n            subheading,\n        ]);\n\n        const onSelectImage = (media) => {\n            setAttributes({\n                heroImageId: media.id,\n                heroImageUrl: media.url,\n                heroImageAlt: media.alt || '',\n            });\n        };\n\n        const onRemoveImage = () => {\n            setAttributes({\n                heroImageId: 0,\n                heroImageUrl: '',\n                heroImageAlt: '',\n            });\n        };\n\n        return (\n            <>\n                <InspectorControls>\n                    <PanelBody \n                        title={__('Hero Image', 'mccullough-digital')} \n                        initialOpen={true}\n                    >\n                        <MediaUploadCheck>\n                            <MediaUpload\n                                onSelect={onSelectImage}\n                                allowedTypes={['image']}\n                                value={heroImageId}\n                                render={({ open }) => (\n                                    <div style={{ marginBottom: '16px' }}>\n                                        {!heroImageUrl ? (\n                                            <Button\n                                                onClick={open}\n                                                variant=\"secondary\"\n                                                style={{ width: '100%' }}\n                                            >\n                                                {__('Select Hero Image', 'mccullough-digital')}\n                                            </Button>\n                                        ) : (\n                                            <>\n                                                <img\n                                                    src={heroImageUrl}\n                                                    alt={heroImageAlt}\n                                                    style={{\n                                                        width: '100%',\n                                                        height: 'auto',\n                                                        marginBottom: '8px',\n                                                        borderRadius: '4px',\n                                                    }}\n                                                />\n                                                <div style={{ display: 'flex', gap: '8px' }}>\n                                                    <Button\n                                                        onClick={open}\n                                                        variant=\"secondary\"\n                                                        style={{ flex: 1 }}\n                                                    >\n                                                        {__('Replace Image', 'mccullough-digital')}\n                                                    </Button>\n                                                    <Button\n                                                        onClick={onRemoveImage}\n                                                        variant=\"secondary\"\n                                                        isDestructive\n                                                    >\n                                                        {__('Remove', 'mccullough-digital')}\n                                                    </Button>\n                                                </div>\n                                            </>\n                                        )}\n                                    </div>\n                                )}\n                            />\n                        </MediaUploadCheck>\n\n                        {heroImageUrl && (\n                            <>\n                                <SelectControl\n                                    label={__('Image Position', 'mccullough-digital')}\n                                    value={imagePosition}\n                                    options={[\n                                        { label: __('Bottom Right', 'mccullough-digital'), value: 'bottom-right' },\n                                        { label: __('Bottom Left', 'mccullough-digital'), value: 'bottom-left' },\n                                        { label: __('Bottom Center', 'mccullough-digital'), value: 'bottom-center' },\n                                        { label: __('Center Right', 'mccullough-digital'), value: 'center-right' },\n                                        { label: __('Center Left', 'mccullough-digital'), value: 'center-left' },\n                                        { label: __('Center', 'mccullough-digital'), value: 'center' },\n                                    ]}\n                                    onChange={(value) => setAttributes({ imagePosition: value })}\n                                />\n\n                                <RangeControl\n                                    label={__('Image Size (%)', 'mccullough-digital')}\n                                    value={imageSize}\n                                    onChange={(value) => setAttributes({ imageSize: value })}\n                                    min={10}\n                                    max={100}\n                                    step={5}\n                                />\n\n                                <RangeControl\n                                    label={__('Opacity (%)', 'mccullough-digital')}\n                                    value={imageOpacity}\n                                    onChange={(value) => setAttributes({ imageOpacity: value })}\n                                    min={0}\n                                    max={100}\n                                    step={5}\n                                />\n\n                                <RangeControl\n                                    label={__('Vertical Offset (px)', 'mccullough-digital')}\n                                    value={imageVerticalOffset}\n                                    onChange={(value) => setAttributes({ imageVerticalOffset: value })}\n                                    min={-200}\n                                    max={200}\n                                    step={10}\n                                    help={__('Positive moves down, negative moves up', 'mccullough-digital')}\n                                />\n\n                                <ToggleControl\n                                    label={__('Hide on Mobile', 'mccullough-digital')}\n                                    checked={hideImageOnMobile}\n                                    onChange={(value) => setAttributes({ hideImageOnMobile: value })}\n                                    help={__('Hide the image on screens smaller than 768px', 'mccullough-digital')}\n                                />\n                            </>\n                        )}\n                    </PanelBody>\n                </InspectorControls>\n\n                <section {...blockProps}>\n                    <div\n                        className=\"hero-canvas-placeholder\"\n                        aria-hidden=\"true\"\n                        role=\"presentation\"\n                    />\n                    {heroImageUrl && (\n                        <div \n                            className=\"hero__image-container\"\n                            style={{\n                                opacity: imageOpacity / 100,\n                            }}\n                        >\n                            <img\n                                src={heroImageUrl}\n                                alt={heroImageAlt}\n                                className=\"hero__decorative-image\"\n                            />\n                        </div>\n                    )}\n                    <div className=\"hero-content\">\n                        <InnerBlocks\n                            allowedBlocks={ allowedHeroBlocks }\n                            template={ heroTemplate }\n                            templateLock={ heroTemplateLock }\n                        />\n                    </div>\n                </section>\n            </>\n        );\n    },\n    save() {\n        return <InnerBlocks.Content />;\n    },\n});\n"],"names":["window","defaultHeadline","_metadata$attributes$","metadata","attributes","headline","default","defaultSubheading","_metadata$attributes$2","subheading","defaultButtonText","_metadata$attributes$3","buttonText","__","defaultButtonLink","_metadata$attributes$4","buttonLink","innerBlocks","allowedBlocks","allowedHeroBlocks","template","heroTemplate","level","className","placeholder","content","layout","type","justifyContent","text","url","templateLock","heroTemplateLock","DEFAULT_BUTTON_TEXT","registerBlockType","edit","setAttributes","clientId","heroImageId","heroImageUrl","heroImageAlt","imagePosition","imageSize","imageOpacity","imageVerticalOffset","hideImageOnMobile","blockProps","useBlockProps","hasMigrated","useRef","useSelect","select","getBlocks","replaceInnerBlocks","useDispatch","useEffect","current","length","generatedBlocks","push","createBlock","button","undefined","buttonsWrapper","onRemoveImage","createElement","Fragment","InspectorControls","PanelBody","title","initialOpen","MediaUploadCheck","MediaUpload","onSelect","media","id","alt","allowedTypes","value","render","open","style","marginBottom","src","width","height","borderRadius","display","gap","Button","onClick","variant","flex","isDestructive","SelectControl","label","options","onChange","RangeControl","min","max","step","help","ToggleControl","checked","role","opacity","InnerBlocks","save","Content"],"sourceRoot":""}