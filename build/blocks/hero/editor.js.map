{"version":3,"file":"blocks/hero/editor.js","mappings":"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","sources":["webpack://mccullough-digital-theme/external window \"React\"","webpack://mccullough-digital-theme/external window [\"wp\",\"blocks\"]","webpack://mccullough-digital-theme/external window [\"wp\",\"i18n\"]","webpack://mccullough-digital-theme/external window [\"wp\",\"element\"]","webpack://mccullough-digital-theme/external window [\"wp\",\"data\"]","webpack://mccullough-digital-theme/external window [\"wp\",\"blockEditor\"]","webpack://mccullough-digital-theme/external window [\"wp\",\"components\"]","webpack://mccullough-digital-theme/./blocks/hero/editor.js"],"sourcesContent":["const __WEBPACK_NAMESPACE_OBJECT__ = window[\"React\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blocks\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"i18n\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"element\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"data\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blockEditor\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"components\"];","import { registerBlockType, createBlock } from '@wordpress/blocks';\r\nimport { __ } from '@wordpress/i18n';\r\nimport { useEffect, useRef } from '@wordpress/element';\r\nimport { useSelect, useDispatch } from '@wordpress/data';\r\nimport {\r\n    useBlockProps,\r\n    InnerBlocks,\r\n    InspectorControls,\r\n    MediaUpload,\r\n    MediaUploadCheck,\r\n} from '@wordpress/block-editor';\r\nimport {\r\n    PanelBody,\r\n    Button,\r\n    SelectControl,\r\n    RangeControl,\r\n    ToggleControl,\r\n} from '@wordpress/components';\r\n\r\nimport metadata from './block.json';\r\n\r\nconst defaultHeadline = metadata?.attributes?.headline?.default ?? '';\r\nconst defaultSubheading = metadata?.attributes?.subheading?.default ?? '';\r\nconst defaultButtonText = metadata?.attributes?.buttonText?.default\r\n    ?? __('Start a Project', 'mccullough-digital');\r\nconst defaultButtonLink = metadata?.attributes?.buttonLink?.default ?? '';\r\nconst MIN_CONTENT_OFFSET = -300; // Allow moving content UP\r\nconst MAX_CONTENT_OFFSET = 240;\r\n\r\nconst {\r\n    innerBlocks: {\r\n        allowedBlocks: allowedHeroBlocks = [\r\n            'core/heading',\r\n            'core/paragraph',\r\n            'core/list',\r\n            'core/buttons',\r\n            'core/group',\r\n            'core/image',\r\n            'core/media-text',\r\n            'mccullough-digital/button',\r\n        ],\r\n        template: heroTemplate = [\r\n            [\r\n                'core/heading',\r\n                {\r\n                    level: 1,\r\n                    className: 'hero__headline',\r\n                    placeholder: __('Add hero headline…', 'mccullough-digital'),\r\n                    content: defaultHeadline,\r\n                },\r\n            ],\r\n            [\r\n                'core/paragraph',\r\n                {\r\n                    placeholder: __('Add supporting copy…', 'mccullough-digital'),\r\n                    content: defaultSubheading,\r\n                },\r\n            ],\r\n            [\r\n                'mccullough-digital/button',\r\n                {\r\n                    buttonText: defaultButtonText,\r\n                    buttonLink: defaultButtonLink,\r\n                },\r\n            ],\r\n        ],\r\n        templateLock: heroTemplateLock = false,\r\n    } = {},\r\n} = metadata;\r\n\r\nconst DEFAULT_BUTTON_TEXT = defaultButtonText;\r\n\r\nregisterBlockType(metadata.name, {\r\n    ...metadata,\r\n    edit({ attributes, setAttributes, clientId }) {\r\n        const { \r\n            headline, \r\n            subheading, \r\n            buttonText, \r\n            buttonLink,\r\n            heroImageId,\r\n            heroImageUrl,\r\n            heroImageAlt,\r\n            imagePosition,\r\n            imageSize,\r\n            imageOpacity,\r\n            imageVerticalOffset,\r\n            imageHorizontalOffset,\r\n            heroImageWidth,\r\n            hideImageOnMobile,\r\n            contentAlignment,\r\n            contentOffset,\r\n        } = attributes;\r\n\r\n        const alignmentOptions = ['top', 'center', 'bottom'];\r\n        const clampOffset = (value) => {\r\n            const numericValue = Number(value);\r\n\r\n            if (!Number.isFinite(numericValue)) {\r\n                return MIN_CONTENT_OFFSET;\r\n            }\r\n\r\n            return Math.min(\r\n                MAX_CONTENT_OFFSET,\r\n                Math.max(MIN_CONTENT_OFFSET, numericValue)\r\n            );\r\n        };\r\n        const normalizedAlignment = alignmentOptions.includes(contentAlignment)\r\n            ? contentAlignment\r\n            : 'center';\r\n        const alignmentClass = `is-content-${normalizedAlignment}`;\r\n\r\n        const normalizedOffset = clampOffset(contentOffset);\r\n\r\n        const blockProps = useBlockProps({\r\n            className: ['hero', alignmentClass].filter(Boolean).join(' '),\r\n            style: {\r\n                '--hero-content-offset': `${normalizedOffset}px`,\r\n            },\r\n        });\r\n\r\n        const hasMigrated = useRef(false);\r\n        const { innerBlocks = [] } = useSelect(\r\n            (select) => ({\r\n                innerBlocks: select('core/block-editor').getBlocks(clientId),\r\n            }),\r\n            [clientId]\r\n        );\r\n        const { replaceInnerBlocks } = useDispatch('core/block-editor');\r\n\r\n        const extractNaturalWidth = (media) => {\r\n            if (!media) {\r\n                return 0;\r\n            }\r\n\r\n            const {\r\n                width,\r\n                media_details: mediaDetails = {},\r\n                sizes = {},\r\n            } = media;\r\n\r\n            const detailsWidth = mediaDetails?.width;\r\n            const fullSizeWidth = sizes?.full?.width;\r\n\r\n            return (\r\n                detailsWidth\r\n                || fullSizeWidth\r\n                || width\r\n                || 0\r\n            );\r\n        };\r\n\r\n        const heroMedia = useSelect(\r\n            (select) =>\r\n                heroImageId ? select('core').getMedia(heroImageId) : null,\r\n            [heroImageId]\r\n        );\r\n\r\n        useEffect(() => {\r\n            if (!heroImageId || !heroMedia) {\r\n                return;\r\n            }\r\n\r\n            const naturalWidth = extractNaturalWidth(heroMedia);\r\n\r\n            if (naturalWidth && naturalWidth !== heroImageWidth) {\r\n                setAttributes({ heroImageWidth: naturalWidth });\r\n            }\r\n        }, [heroImageId, heroImageWidth, heroMedia, setAttributes]);\r\n\r\n        useEffect(() => {\r\n            if (hasMigrated.current) {\r\n                return;\r\n            }\r\n\r\n            if (innerBlocks.length > 0) {\r\n                hasMigrated.current = true;\r\n                return;\r\n            }\r\n\r\n            const generatedBlocks = [];\r\n\r\n            if (headline) {\r\n                generatedBlocks.push(\r\n                    createBlock('core/heading', {\r\n                        level: 1,\r\n                        className: 'hero__headline',\r\n                        content: headline,\r\n                    })\r\n                );\r\n            }\r\n\r\n            if (subheading) {\r\n                generatedBlocks.push(\r\n                    createBlock('core/paragraph', {\r\n                        content: subheading,\r\n                    })\r\n                );\r\n            }\r\n\r\n            if (buttonText || buttonLink) {\r\n                const neonButton = createBlock('mccullough-digital/button', {\r\n                    buttonText: buttonText || DEFAULT_BUTTON_TEXT,\r\n                    buttonLink: buttonLink || '',\r\n                });\r\n\r\n                generatedBlocks.push(neonButton);\r\n            }\r\n\r\n            if (generatedBlocks.length === 0) {\r\n                return;\r\n            }\r\n\r\n            replaceInnerBlocks(clientId, generatedBlocks, false);\r\n            hasMigrated.current = true;\r\n        }, [\r\n            buttonLink,\r\n            buttonText,\r\n            clientId,\r\n            headline,\r\n            innerBlocks.length,\r\n            replaceInnerBlocks,\r\n            subheading,\r\n        ]);\r\n\r\n        const onSelectImage = (media) => {\r\n            setAttributes({\r\n                heroImageId: media.id,\r\n                heroImageUrl: media.url,\r\n                heroImageAlt: media.alt || '',\r\n                heroImageWidth: extractNaturalWidth(media),\r\n            });\r\n        };\r\n\r\n        const onRemoveImage = () => {\r\n            setAttributes({\r\n                heroImageId: 0,\r\n                heroImageUrl: '',\r\n                heroImageAlt: '',\r\n                heroImageWidth: 0,\r\n            });\r\n        };\r\n\r\n        const buildImagePresentation = () => {\r\n            const baseTransforms = {\r\n                'bottom-center': 'translateX(-50%)',\r\n                'center-right': 'translateY(-50%)',\r\n                'center-left': 'translateY(-50%)',\r\n                center: 'translate(-50%, -50%)',\r\n            };\r\n\r\n            const classes = ['hero__image-container'];\r\n\r\n            if (imagePosition) {\r\n                classes.push(`hero__image-position--${imagePosition}`);\r\n            }\r\n\r\n            if (hideImageOnMobile) {\r\n                classes.push('hero__image-hide-mobile');\r\n            }\r\n\r\n            const styles = {\r\n                opacity: imageOpacity / 100,\r\n            };\r\n\r\n            if (heroImageWidth > 0) {\r\n                styles.width = `calc(${imageSize} / 100 * ${heroImageWidth}px)`;\r\n            } else {\r\n                styles.width = `${imageSize}vw`;\r\n            }\r\n\r\n            const transformParts = [];\r\n\r\n            if (baseTransforms[imagePosition]) {\r\n                transformParts.push(baseTransforms[imagePosition]);\r\n            }\r\n\r\n            if (imageVerticalOffset !== 0) {\r\n                transformParts.push(`translateY(${imageVerticalOffset}px)`);\r\n            }\r\n\r\n            if (imageHorizontalOffset !== 0) {\r\n                transformParts.push(`translateX(${imageHorizontalOffset}px)`);\r\n            }\r\n\r\n            if (transformParts.length > 0) {\r\n                styles.transform = transformParts.join(' ');\r\n            }\r\n\r\n            return {\r\n                className: classes.join(' '),\r\n                styles,\r\n            };\r\n        };\r\n\r\n        const { className: imageContainerClassName, styles: imageStyles } =\r\n            buildImagePresentation();\r\n\r\n        return (\r\n            <>\r\n                <InspectorControls>\r\n                    <PanelBody\r\n                        title={__('Hero Image', 'mccullough-digital')}\r\n                        initialOpen={true}\r\n                    >\r\n                        <MediaUploadCheck>\r\n                            <MediaUpload\r\n                                onSelect={onSelectImage}\r\n                                allowedTypes={['image']}\r\n                                value={heroImageId}\r\n                                render={({ open }) => (\r\n                                    <div style={{ marginBottom: '16px' }}>\r\n                                        {!heroImageUrl ? (\r\n                                            <Button\r\n                                                onClick={open}\r\n                                                variant=\"secondary\"\r\n                                                style={{ width: '100%' }}\r\n                                            >\r\n                                                {__('Select Hero Image', 'mccullough-digital')}\r\n                                            </Button>\r\n                                        ) : (\r\n                                            <>\r\n                                                <img\r\n                                                    src={heroImageUrl}\r\n                                                    alt={heroImageAlt}\r\n                                                    style={{\r\n                                                        width: '100%',\r\n                                                        height: 'auto',\r\n                                                        marginBottom: '8px',\r\n                                                        borderRadius: '4px',\r\n                                                    }}\r\n                                                />\r\n                                                <div style={{ display: 'flex', gap: '8px' }}>\r\n                                                    <Button\r\n                                                        onClick={open}\r\n                                                        variant=\"secondary\"\r\n                                                        style={{ flex: 1 }}\r\n                                                    >\r\n                                                        {__('Replace Image', 'mccullough-digital')}\r\n                                                    </Button>\r\n                                                    <Button\r\n                                                        onClick={onRemoveImage}\r\n                                                        variant=\"secondary\"\r\n                                                        isDestructive\r\n                                                    >\r\n                                                        {__('Remove', 'mccullough-digital')}\r\n                                                    </Button>\r\n                                                </div>\r\n                                            </>\r\n                                        )}\r\n                                    </div>\r\n                                )}\r\n                            />\r\n                        </MediaUploadCheck>\r\n\r\n                        {heroImageUrl && (\r\n                            <>\r\n                                <SelectControl\r\n                                    label={__('Image Position', 'mccullough-digital')}\r\n                                    value={imagePosition}\r\n                                    options={[\r\n                                        { label: __('Bottom Right', 'mccullough-digital'), value: 'bottom-right' },\r\n                                        { label: __('Bottom Left', 'mccullough-digital'), value: 'bottom-left' },\r\n                                        { label: __('Bottom Center', 'mccullough-digital'), value: 'bottom-center' },\r\n                                        { label: __('Center Right', 'mccullough-digital'), value: 'center-right' },\r\n                                        { label: __('Center Left', 'mccullough-digital'), value: 'center-left' },\r\n                                        { label: __('Center', 'mccullough-digital'), value: 'center' },\r\n                                    ]}\r\n                                    onChange={(value) => setAttributes({ imagePosition: value })}\r\n                                />\r\n\r\n                                <RangeControl\r\n                                    label={__('Image Size (%)', 'mccullough-digital')}\r\n                                    value={imageSize}\r\n                                    onChange={(value) => setAttributes({ imageSize: value })}\r\n                                    min={10}\r\n                                    max={200}\r\n                                    step={5}\r\n                                />\r\n\r\n                                <RangeControl\r\n                                    label={__('Opacity (%)', 'mccullough-digital')}\r\n                                    value={imageOpacity}\r\n                                    onChange={(value) => setAttributes({ imageOpacity: value })}\r\n                                    min={0}\r\n                                    max={100}\r\n                                    step={5}\r\n                                />\r\n\r\n                                <RangeControl\r\n                                    label={__('Vertical Offset (px)', 'mccullough-digital')}\r\n                                    value={imageVerticalOffset}\r\n                                    onChange={(value) => setAttributes({ imageVerticalOffset: value })}\r\n                                    min={-200}\r\n                                    max={200}\r\n                                    step={10}\r\n                                    help={__('Positive moves down, negative moves up', 'mccullough-digital')}\r\n                                />\r\n\r\n                                <RangeControl\r\n                                    label={__('Horizontal Offset (px)', 'mccullough-digital')}\r\n                                    value={imageHorizontalOffset}\r\n                                    onChange={(value) => setAttributes({ imageHorizontalOffset: value })}\r\n                                    min={-200}\r\n                                    max={200}\r\n                                    step={10}\r\n                                    help={__('Positive moves right, negative moves left', 'mccullough-digital')}\r\n                                />\r\n\r\n                                <ToggleControl\r\n                                    label={__('Hide on Mobile', 'mccullough-digital')}\r\n                                    checked={hideImageOnMobile}\r\n                                    onChange={(value) => setAttributes({ hideImageOnMobile: value })}\r\n                                    help={__('Hide the image on screens smaller than 768px', 'mccullough-digital')}\r\n                                />\r\n                            </>\r\n                        )}\r\n                    </PanelBody>\r\n                    <PanelBody\r\n                        title={__('Content Layout', 'mccullough-digital')}\r\n                        initialOpen={false}\r\n                    >\r\n                        <SelectControl\r\n                            label={__('Vertical Alignment', 'mccullough-digital')}\r\n                            value={normalizedAlignment}\r\n                            options={[\r\n                                {\r\n                                    label: __('Top', 'mccullough-digital'),\r\n                                    value: 'top',\r\n                                },\r\n                                {\r\n                                    label: __('Center', 'mccullough-digital'),\r\n                                    value: 'center',\r\n                                },\r\n                                {\r\n                                    label: __('Bottom', 'mccullough-digital'),\r\n                                    value: 'bottom',\r\n                                },\r\n                            ]}\r\n                            onChange={(value) => {\r\n                                if (alignmentOptions.includes(value)) {\r\n                                    setAttributes({ contentAlignment: value });\r\n                                }\r\n                            }}\r\n                        />\r\n                        <RangeControl\r\n                            label={__('Vertical Position (px)', 'mccullough-digital')}\r\n                            value={normalizedOffset}\r\n                            onChange={(value) =>\r\n                                setAttributes({ contentOffset: clampOffset(value) })\r\n                            }\r\n                            min={MIN_CONTENT_OFFSET}\r\n                            max={MAX_CONTENT_OFFSET}\r\n                            step={10}\r\n                            allowReset\r\n                            help={__('Negative values move content UP, positive values move content DOWN', 'mccullough-digital')}\r\n                        />\r\n                    </PanelBody>\r\n                </InspectorControls>\r\n\r\n                <section {...blockProps}>\r\n                    <div\r\n                        className=\"hero-canvas-placeholder\"\r\n                        aria-hidden=\"true\"\r\n                        role=\"presentation\"\r\n                    />\r\n                    {heroImageUrl && (\r\n                        <div className={imageContainerClassName} style={imageStyles}>\r\n                            <img\r\n                                src={heroImageUrl}\r\n                                alt={heroImageAlt}\r\n                                className=\"hero__decorative-image\"\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    <div className=\"hero-content\">\r\n                        <InnerBlocks\r\n                            allowedBlocks={ allowedHeroBlocks }\r\n                            template={ heroTemplate }\r\n                            templateLock={ heroTemplateLock }\r\n                        />\r\n                    </div>\r\n                </section>\r\n            </>\r\n        );\r\n    },\r\n    save() {\r\n        return <InnerBlocks.Content />;\r\n    },\r\n});\r\n"],"names":["window","defaultHeadline","_metadata$attributes$","metadata","attributes","headline","default","defaultSubheading","_metadata$attributes$2","subheading","defaultButtonText","_metadata$attributes$3","buttonText","__","defaultButtonLink","_metadata$attributes$4","buttonLink","MIN_CONTENT_OFFSET","innerBlocks","allowedBlocks","allowedHeroBlocks","template","heroTemplate","level","className","placeholder","content","templateLock","heroTemplateLock","DEFAULT_BUTTON_TEXT","registerBlockType","edit","setAttributes","clientId","heroImageId","heroImageUrl","heroImageAlt","imagePosition","imageSize","imageOpacity","imageVerticalOffset","imageHorizontalOffset","heroImageWidth","hideImageOnMobile","contentAlignment","contentOffset","alignmentOptions","clampOffset","value","numericValue","Number","isFinite","Math","min","max","normalizedAlignment","includes","alignmentClass","normalizedOffset","blockProps","useBlockProps","filter","Boolean","join","style","hasMigrated","useRef","useSelect","select","getBlocks","replaceInnerBlocks","useDispatch","extractNaturalWidth","media","width","media_details","mediaDetails","sizes","detailsWidth","fullSizeWidth","full","heroMedia","getMedia","useEffect","naturalWidth","current","length","generatedBlocks","push","createBlock","neonButton","onRemoveImage","imageContainerClassName","styles","imageStyles","buildImagePresentation","baseTransforms","center","classes","opacity","transformParts","transform","createElement","Fragment","InspectorControls","PanelBody","title","initialOpen","MediaUploadCheck","MediaUpload","onSelect","id","url","alt","allowedTypes","render","open","marginBottom","src","height","borderRadius","display","gap","Button","onClick","variant","flex","isDestructive","SelectControl","label","options","onChange","RangeControl","step","help","ToggleControl","checked","allowReset","role","InnerBlocks","save","Content"],"sourceRoot":""}